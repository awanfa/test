{
	"info": {
		"_postman_id": "a1ebe2bf-27b6-4800-9ac5-69773a9475ee",
		"name": "Verizon SDSB",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Step 1 - New Customer ADOM Configuration",
			"item": [
				{
					"name": "0 - Create new ADOM",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom\",\n            \"data\": [\n                {\n                    \"name\": \"{{adom}}\"\n\n                }\n \n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 - Add Mgmt VPN Communities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/vpnmgr/vpntable\",\n            \"data\": [\n                {\n                    \"name\": \"Mgmt_H1N1\",\n                    \"topology\": 2,\n                    \"psk-auto-generate\": 0,\n                    \"psksecret\": \"123456\",\n                    \"auto-zone-policy\": \"disable\",\n                    \"ike1keylifesec\": 86400,\n                    \"ike1dpd\": 1,\n                    \"ike1natkeepalive\": 10,\n                    \"dpd\": 2,\n                    \"dpd-retrycount\": 3,\n                    \"dpd-retryinterval\": 30,\n                    \"ike2keylifesec\": 43200,\n                    \"ike2keylifekbs\": 5120,\n                    \"ike2keepalive\": 1,\n                    \"ike-version\": 2,\n                    \"negotiate-timeout\": 30,\n                    \"npu-offload\": 1,\n                    \"authmethod\": 1,\n                    \"ike1dhgroup\": [5,14],\n                    \"ike1mode\": 1,\n                    \"ike1nattraversal\": 1,\n                    \"network-overlay\": 1,\n                    \"network-id\": 1,\n                    \"ike1proposal\": [\n                        \"aes256-sha512\",\n                    ],\n                    \"ike2autonego\": 0,\n                    \"ike2dhgroup\": [5,14],\n                    \"ike2keylifetype\": 1,\n                    \"pfs\": 1,\n                    \"ike2proposal\": [\n                        \"aes256-sha512\",\n\n                    ],\n                    \"replay\": 1\n                },\n\n                {\n                    \"name\": \"Mgmt_H1N2\",\n                    \"topology\": 2,\n                    \"psk-auto-generate\": 0,\n                    \"psksecret\": \"123456\",\n                    \"auto-zone-policy\": \"disable\",\n                    \"ike1keylifesec\": 86400,\n                    \"ike1dpd\": 1,\n                    \"ike1natkeepalive\": 10,\n                    \"dpd\": 2,\n                    \"dpd-retrycount\": 3,\n                    \"dpd-retryinterval\": 30,\n                    \"ike2keylifesec\": 43200,\n                    \"ike2keylifekbs\": 5120,\n                    \"ike2keepalive\": 1,\n                    \"ike-version\": 2,\n                    \"negotiate-timeout\": 30,\n                    \"npu-offload\": 1,\n                    \"authmethod\": 1,\n                    \"ike1dhgroup\": [5,14],\n                    \"ike1mode\": 1,\n                    \"ike1nattraversal\": 1,\n                    \"network-overlay\": 1,\n                    \"network-id\": 2,\n                    \"ike1proposal\": [\n                        \"aes256-sha512\",\n                    ],\n                    \"ike2autonego\": 0,\n                    \"ike2dhgroup\": [5,14],\n                    \"ike2keylifetype\": 1,\n                    \"pfs\": 1,\n                    \"ike2proposal\": [\n                        \"aes256-sha512\",\n\n                    ],\n                    \"replay\": 1\n                },\n\n                {\n                    \"name\": \"Mgmt_H2N1\",\n                    \"topology\": 2,\n                    \"psk-auto-generate\": 0,\n                    \"psksecret\": \"123456\",\n                    \"auto-zone-policy\": \"disable\",\n                    \"ike1keylifesec\": 86400,\n                    \"ike1dpd\": 1,\n                    \"ike1natkeepalive\": 10,\n                    \"dpd\": 2,\n                    \"dpd-retrycount\": 3,\n                    \"dpd-retryinterval\": 30,\n                    \"ike2keylifesec\": 43200,\n                    \"ike2keylifekbs\": 5120,\n                    \"ike2keepalive\": 1,\n                    \"ike-version\": 2,\n                    \"negotiate-timeout\": 30,\n                    \"npu-offload\": 1,\n                    \"authmethod\": 1,\n                    \"ike1dhgroup\": [5,14],\n                    \"ike1mode\": 1,\n                    \"ike1nattraversal\": 1,\n                    \"network-overlay\": 1,\n                    \"network-id\": 1,\n                    \"ike1proposal\": [\n                        \"aes256-sha512\",\n                    ],\n                    \"ike2autonego\": 0,\n                    \"ike2dhgroup\": [5,14],\n                    \"ike2keylifetype\": 1,\n                    \"pfs\": 1,\n                    \"ike2proposal\": [\n                        \"aes256-sha512\",\n\n                    ],\n                    \"replay\": 1\n                },\n \n\n                {\n                    \"name\": \"Mgmt_H2N2\",\n                    \"topology\": 2,\n                    \"psk-auto-generate\": 0,\n                    \"psksecret\": \"123456\",\n                    \"auto-zone-policy\": \"disable\",\n                    \"ike1keylifesec\": 86400,\n                    \"ike1dpd\": 1,\n                    \"ike1natkeepalive\": 10,\n                    \"dpd\": 2,\n                    \"dpd-retrycount\": 3,\n                    \"dpd-retryinterval\": 30,\n                    \"ike2keylifesec\": 43200,\n                    \"ike2keylifekbs\": 5120,\n                    \"ike2keepalive\": 1,\n                    \"ike-version\": 2,\n                    \"negotiate-timeout\": 30,\n                    \"npu-offload\": 1,\n                    \"authmethod\": 1,\n                    \"ike1dhgroup\": [5,14],\n                    \"ike1mode\": 1,\n                    \"ike1nattraversal\": 1,\n                    \"network-overlay\": 1,\n                    \"network-id\": 2,\n                    \"ike1proposal\": [\n                        \"aes256-sha512\",\n                    ],\n                    \"ike2autonego\": 0,\n                    \"ike2dhgroup\": [5,14],\n                    \"ike2keylifetype\": 1,\n                    \"pfs\": 1,\n                    \"ike2proposal\": [\n                        \"aes256-sha512\",\n\n                    ],\n                    \"replay\": 1\n                }\n \n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - Add Overlay VPN Communities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/vpnmgr/vpntable\",\n            \"data\": [\n                {\n                    \"name\": \"WAN_ID1\",\n                    \"topology\": 2,\n                    \"psk-auto-generate\": 0,\n                    \"psksecret\": \"12345678\",\n                    \"auto-zone-policy\": \"disable\",\n                    \"ike1keylifesec\": 28800,\n                    \"ike1dpd\": 1,\n                    \"ike1natkeepalive\": 10,\n                    \"dpd\": 2,\n                    \"dpd-retrycount\": 2,\n                    \"dpd-retryinterval\": 10,\n                    \"ike2keylifesec\": 1800,\n                    \"ike2keylifekbs\": 5120,\n                    \"ike2keepalive\": 1,\n                    \"ike-version\": 2,\n                    \"negotiate-timeout\": 30,\n                    \"npu-offload\": 1,\n                    \"authmethod\": 1,\n                    \"ike1dhgroup\": [5,14],\n                    \"ike1mode\": 1,\n                    \"ike1nattraversal\": 1,\n                    \"network-overlay\": 1,\n                    \"network-id\": 1,\n                    \"ike1proposal\": [\n                        \"aes256-sha256\",\n                    ],\n                    \"ike2autonego\": 0,\n                    \"ike2dhgroup\": [5,14],\n                    \"ike2keylifetype\": 1,\n                    \"pfs\": 1,\n                    \"ike2proposal\": [\n                        \"aes256-sha256\",\n\n                    ],\n                    \"replay\": 1\n                },\n\n\n                {\n                    \"name\": \"WAN_ID2\",\n                    \"topology\": 2,\n                    \"psk-auto-generate\": 0,\n                    \"psksecret\": \"12345678\",\n                    \"auto-zone-policy\": \"disable\",\n                    \"ike1keylifesec\": 28800,\n                    \"ike1dpd\": 1,\n                    \"ike1natkeepalive\": 10,\n                    \"dpd\": 2,\n                    \"dpd-retrycount\": 2,\n                    \"dpd-retryinterval\": 10,\n                    \"ike2keylifesec\": 1800,\n                    \"ike2keylifekbs\": 5120,\n                    \"ike2keepalive\": 1,\n                    \"ike-version\": 2,\n                    \"negotiate-timeout\": 30,\n                    \"npu-offload\": 1,\n                    \"authmethod\": 1,\n                    \"ike1dhgroup\": [5,14],\n                    \"ike1mode\": 1,\n                    \"ike1nattraversal\": 1,\n                    \"network-overlay\": 1,\n                    \"network-id\": 2,\n                    \"ike1proposal\": [\n                        \"aes256-sha256\",\n                    ],\n                    \"ike2autonego\": 0,\n                    \"ike2dhgroup\": [5,14],\n                    \"ike2keylifetype\": 1,\n                    \"pfs\": 1,\n                    \"ike2proposal\": [\n                        \"aes256-sha256\",\n\n                    ],\n                    \"replay\": 1\n                },\n\n                {\n                    \"name\": \"WAN_ID3\",\n                    \"topology\": 2,\n                    \"psk-auto-generate\": 0,\n                    \"psksecret\": \"12345678\",\n                    \"auto-zone-policy\": \"disable\",\n                    \"ike1keylifesec\": 28800,\n                    \"ike1dpd\": 1,\n                    \"ike1natkeepalive\": 10,\n                    \"dpd\": 2,\n                    \"dpd-retrycount\": 2,\n                    \"dpd-retryinterval\": 10,\n                    \"ike2keylifesec\": 1800,\n                    \"ike2keylifekbs\": 5120,\n                    \"ike2keepalive\": 1,\n                    \"ike-version\": 2,\n                    \"negotiate-timeout\": 30,\n                    \"npu-offload\": 1,\n                    \"authmethod\": 1,\n                    \"ike1dhgroup\": [5,14],\n                    \"ike1mode\": 1,\n                    \"ike1nattraversal\": 1,\n                    \"network-overlay\": 1,\n                    \"network-id\": 3,\n                    \"ike1proposal\": [\n                        \"aes256-sha256\",\n                    ],\n                    \"ike2autonego\": 0,\n                    \"ike2dhgroup\": [5,14],\n                    \"ike2keylifetype\": 1,\n                    \"pfs\": 1,\n                    \"ike2proposal\": [\n                        \"aes256-sha256\",\n\n                    ],\n                    \"replay\": 1\n                },\n\n                {\n                    \"name\": \"WAN_ID4\",\n                    \"topology\": 2,\n                    \"psk-auto-generate\": 0,\n                    \"psksecret\": \"12345678\",\n                    \"auto-zone-policy\": \"disable\",\n                    \"ike1keylifesec\": 28800,\n                    \"ike1dpd\": 1,\n                    \"ike1natkeepalive\": 10,\n                    \"dpd\": 2,\n                    \"dpd-retrycount\": 2,\n                    \"dpd-retryinterval\": 10,\n                    \"ike2keylifesec\": 1800,\n                    \"ike2keylifekbs\": 5120,\n                    \"ike2keepalive\": 1,\n                    \"ike-version\": 2,\n                    \"negotiate-timeout\": 30,\n                    \"npu-offload\": 1,\n                    \"authmethod\": 1,\n                    \"ike1dhgroup\": [5,14],\n                    \"ike1mode\": 1,\n                    \"ike1nattraversal\": 1,\n                    \"network-overlay\": 1,\n                    \"network-id\": 4,\n                    \"ike1proposal\": [\n                        \"aes256-sha256\",\n                    ],\n                    \"ike2autonego\": 0,\n                    \"ike2dhgroup\": [5,14],\n                    \"ike2keylifetype\": 1,\n                    \"pfs\": 1,\n                    \"ike2proposal\": [\n                        \"aes256-sha256\",\n\n                    ],\n                    \"replay\": 1\n                },\n\n                {\n                    \"name\": \"WAN_ID5\",\n                    \"topology\": 2,\n                    \"psk-auto-generate\": 0,\n                    \"psksecret\": \"12345678\",\n                    \"auto-zone-policy\": \"disable\",\n                    \"ike1keylifesec\": 28800,\n                    \"ike1dpd\": 1,\n                    \"ike1natkeepalive\": 10,\n                    \"dpd\": 2,\n                    \"dpd-retrycount\": 2,\n                    \"dpd-retryinterval\": 10,\n                    \"ike2keylifesec\": 1800,\n                    \"ike2keylifekbs\": 5120,\n                    \"ike2keepalive\": 1,\n                    \"ike-version\": 2,\n                    \"negotiate-timeout\": 30,\n                    \"npu-offload\": 1,\n                    \"authmethod\": 1,\n                    \"ike1dhgroup\": [5,14],\n                    \"ike1mode\": 1,\n                    \"ike1nattraversal\": 1,\n                    \"network-overlay\": 1,\n                    \"network-id\": 5,\n                    \"ike1proposal\": [\n                        \"aes256-sha256\",\n                    ],\n                    \"ike2autonego\": 0,\n                    \"ike2dhgroup\": [5,14],\n                    \"ike2keylifetype\": 1,\n                    \"pfs\": 1,\n                    \"ike2proposal\": [\n                        \"aes256-sha256\",\n\n                    ],\n                    \"replay\": 1\n                },\n\n                {\n                    \"name\": \"WAN_ID6\",\n                    \"topology\": 2,\n                    \"psk-auto-generate\": 0,\n                    \"psksecret\": \"12345678\",\n                    \"auto-zone-policy\": \"disable\",\n                    \"ike1keylifesec\": 28800,\n                    \"ike1dpd\": 1,\n                    \"ike1natkeepalive\": 10,\n                    \"dpd\": 2,\n                    \"dpd-retrycount\": 2,\n                    \"dpd-retryinterval\": 10,\n                    \"ike2keylifesec\": 1800,\n                    \"ike2keylifekbs\": 5120,\n                    \"ike2keepalive\": 1,\n                    \"ike-version\": 2,\n                    \"negotiate-timeout\": 30,\n                    \"npu-offload\": 1,\n                    \"authmethod\": 1,\n                    \"ike1dhgroup\": [5,14],\n                    \"ike1mode\": 1,\n                    \"ike1nattraversal\": 1,\n                    \"network-overlay\": 1,\n                    \"network-id\": 6,\n                    \"ike1proposal\": [\n                        \"aes256-sha256\",\n                    ],\n                    \"ike2autonego\": 0,\n                    \"ike2dhgroup\": [5,14],\n                    \"ike2keylifetype\": 1,\n                    \"pfs\": 1,\n                    \"ike2proposal\": [\n                        \"aes256-sha256\",\n\n                    ],\n                    \"replay\": 1\n                },\n\n\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 - Add Normalized Interfaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/\",\n            \"data\": [\n                {\n                    \"name\": \"Mgmt_H1N1\",\n                    \"description\": \"Headend 1 - Network ID 1\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"Mgmt_H1N1\",\n                    \"color\": 4\n                },\n                {\n                    \"name\": \"Mgmt_H1N2\",\n                    \"description\": \"Headend 1 - Network ID 2\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"Mgmt_H1N2\",\n                    \"color\": 4\n                },\n                {\n                    \"name\": \"Mgmt_H2N1\",\n                    \"description\": \"Headend 2 - Network ID 1\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"Mgmt_H2N1\",\n                    \"color\": 4\n                },\n                {\n                    \"name\": \"Mgmt_H2N2\",\n                    \"description\": \"Headend 2 - Network ID 2\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"Mgmt_H2N2\",\n                    \"color\": 4\n                },\n                {\n                    \"name\": \"WAN_ID1\",\n                    \"description\": \"Customer DC 1 - Network ID 1 - WAN 1 [INET or LTE]\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"WAN_ID1\",\n                    \"color\": 4\n                },\n                {\n                    \"name\": \"WAN_ID2\",\n                    \"description\": \"Customer DC 1 - Network ID 2 - WAN 2 [INET or LTE]\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"WAN_ID2\",\n                    \"color\": 4\n                },\n\n                {\n                    \"name\": \"WAN_ID3\",\n                    \"description\": \"Customer DC 1 - Network ID 3 - WAN 2 [MPLS]\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"WAN_ID3\",\n                    \"color\": 4\n                },\n\n                {\n                    \"name\": \"WAN_ID4\",\n                    \"description\": \"Customer DC 2 - Network ID 4 - WAN 1 [INET or LTE]\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"WAN_ID4\",\n                    \"color\": 4\n                },\n\n                {\n                    \"name\": \"WAN_ID5\",\n                    \"description\": \"Customer DC 2 - Network ID 5 - WAN 2 [INET or LTE]\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"WAN_ID5\",\n                    \"color\": 4\n                },\n\n                {\n                    \"name\": \"WAN_ID6\",\n                    \"description\": \"Customer DC 2 - Network ID 6 - WAN 2 [MPLS]\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"WAN_ID6\",\n                    \"color\": 4\n                },\n\n                {\n                    \"name\": \"Overlay\",\n                    \"description\": \"SD-WAN Zone for Overlay Tunnel Interfaces\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"Overlay\",\n                    \"color\": 4\n                },\n\n                {\n                    \"name\": \"Underlay\",\n                    \"description\": \"SD-WAN Zone for MPLS Interface\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"Underlay\",\n                    \"color\": 4\n                },\n\n                {\n                    \"name\": \"Internet\",\n                    \"description\": \"SD-WAN Zone for Internet Interfaces\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"Internet\",\n                    \"color\": 4\n                },\n\n                {\n                    \"name\": \"Mgmt_Loopback\",\n                    \"description\": \"Management Loopback Interfaces\",\n                    \"single-intf\": 1,\n                    \"color\": 4\n                },\n\n                {\n                    \"name\": \"LAN\",\n                    \"description\": \"Management Loopback Interfaces\",\n                    \"single-intf\": 1,\n                    \"color\": 4\n                },\n\n                {\n                    \"name\": \"wan1\",\n                    \"description\": \"Management Loopback Interfaces\",\n                    \"single-intf\": 1,\n                    \"platform_mapping\": 0,\n                    \"color\": 4\n                },\n\n                {\n                    \"name\": \"wan2\",\n                    \"description\": \"Management Loopback Interfaces\",\n                    \"single-intf\": 1,\n                    \"platform_mapping\": 0,\n                    \"color\": 4\n                },\n\n                {\n                    \"name\": \"FEX\",\n                    \"description\": \"Management Loopback Interfaces\",\n                    \"single-intf\": 1,\n                    \"color\": 4\n                },\n\n                {\n                    \"name\": \"HC_Loopback\",\n                    \"description\": \"Hubs Health Check Loopback\",\n                    \"single-intf\": 1,\n                    \"color\": 4\n                },\n\n\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 - Create Device Groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/group\",\n            \"data\": [\n                {\n                    \"name\": \"hubs\",\n                    \"os_type\": 1\n                },\n                {\n                    \"name\": \"dual-broadband\",\n                    \"os_type\": 1\n                },\n                {\n                    \"name\": \"pip-broadband\",\n                    \"os_type\": 1\n                },\n                {\n                    \"name\": \"broadband-lte\",\n                    \"os_type\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 - Add Address Objects for Mgmt Headends",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/firewall/address\",\n            \"data\": [\n                {\n                    \"name\": \"Headend1_LAN_10.20.100.0/24\",\n                    \"subnet\": [\n                        \"10.20.100.0\",\n                        \"255.255.255.0\"\n                    ],\n                    \"type\": 0,\n                    \"associated-interface\": \"any\",\n                    \"color\": 22\n                },\n\n                {\n                    \"name\": \"Headend2_LAN_10.20.200.0/24\",\n                    \"subnet\": [\n                        \"10.20.200.0\",\n                        \"255.255.255.0\"\n                    ],\n                    \"type\": 0,\n                    \"associated-interface\": \"any\",\n                    \"color\": 22\n                },\n\n                {\n                    \"name\": \"Headend_1_IP_204.177.181.230\",\n                    \"subnet\": [\n                        \"204.177.181.230\",\n                        \"255.255.255.255\"\n                    ],\n                    \"type\": 0,\n                    \"associated-interface\": \"any\",\n                    \"color\": 22\n                },\n\n                {\n                    \"name\": \"Headend_2_IP_204.177.181.234\",\n                    \"subnet\": [\n                        \"204.177.181.234\",\n                        \"255.255.255.255\"\n                    ],\n                    \"type\": 0,\n                    \"associated-interface\": \"any\",\n                    \"color\": 22\n                }\n\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "6 - Add Mgmt Headends VPN Hubs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/vpnmgr/node\",\n            \"data\": [\n                {\n                \t\"id\": 500,\n                    \"protected_subnet\": [\n                        {\n                        \"addr\": \"Headend1_LAN_10.20.100.0/24\",\n                        \"seq\": 1\n                         },\n                        {\n                        \"addr\": \"Headend2_LAN_10.20.200.0/24\",\n                        \"seq\": 2\n                         } ],\n                    \"vpntable\": \"Mgmt_H1N1\",\n                    \"role\": 0,\n                    \"net-device\": 0,\n                    \"extgw\": \"Headned_1\",\n                    \"extgwip\": \"Headend_1_IP_204.177.181.230\",\n                    \"extgw_p2_per_net\": 1,\n                    \"peertype\": 1,\n                },\n\n                {\n                \t\"id\": 501,\n                    \"protected_subnet\": [\n                        {\n                        \"addr\": \"Headend1_LAN_10.20.100.0/24\",\n                        \"seq\": 1\n                         },\n                        {\n                        \"addr\": \"Headend2_LAN_10.20.200.0/24\",\n                        \"seq\": 2\n                         } ],\n                    \"vpntable\": \"Mgmt_H1N2\",\n                    \"role\": 0,\n                    \"net-device\": 0,\n                    \"extgw\": \"Headned_1\",\n                    \"extgwip\": \"Headend_1_IP_204.177.181.230\",\n                    \"extgw_p2_per_net\": 1,\n                    \"peertype\": 1,\n                },\n\n\n                {\n                \t\"id\": 502,\n                    \"protected_subnet\": [\n                        {\n                        \"addr\": \"Headend1_LAN_10.20.100.0/24\",\n                        \"seq\": 1\n                         },\n                        {\n                        \"addr\": \"Headend2_LAN_10.20.200.0/24\",\n                        \"seq\": 2\n                         } ],\n                    \"vpntable\": \"Mgmt_H2N1\",\n                    \"role\": 0,\n                    \"net-device\": 0,\n                    \"extgw\": \"Headend_2\",\n                    \"extgwip\": \"Headend_2_IP_204.177.181.234\",\n                    \"extgw_p2_per_net\": 1,\n                    \"peertype\": 1,\n                },\n\n\n\n                {\n                \t\"id\": 503,\n                    \"protected_subnet\": [\n                        {\n                        \"addr\": \"Headend1_LAN_10.20.100.0/24\",\n                        \"seq\": 1\n                         },\n                        {\n                        \"addr\": \"Headend2_LAN_10.20.200.0/24\",\n                        \"seq\": 2\n                         } ],\n                    \"vpntable\": \"Mgmt_H2N2\",\n                    \"role\": 0,\n                    \"net-device\": 0,\n                    \"extgw\": \"Headend_2\",\n                    \"extgwip\": \"Headend_2_IP_204.177.181.234\",\n                    \"extgw_p2_per_net\": 1,\n                    \"peertype\": 1,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "7 - Add Address Objects for Dynamic Mapping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/firewall/address\",\n            \"data\": [\n                {\n                    \"name\": \"Mgmt_Loopback\",\n                    \"type\": 0,\n                    \"associated-interface\": \"any\",\n                    \"color\": 22\n                },\n\n                {\n                    \"name\": \"LAN\",\n                    \"type\": 0,\n                    \"associated-interface\": \"any\",\n                    \"color\": 22\n                },\n\n                {\n                    \"name\": \"Spokes_LANs_10.50.0.0/16\",\n                    \"subnet\": [\n                        \"10.50.0.0\",\n                        \"255.255.0.0\"\n                    ],\n                    \"type\": 0,\n                    \"associated-interface\": \"any\",\n                    \"color\": 22\n                },\n\n                {\n                    \"name\": \"Hubs_Health_Check_10.200.99.1\",\n                    \"subnet\": [\n                        \"10.200.99.1\",\n                        \"255.255.255.255\"\n                    ],\n                    \"type\": 0,\n                    \"associated-interface\": \"any\",\n                    \"color\": 22\n                }\n\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - Add Firewall Policy Packages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/pkg/adom/{{adom}}\",\n            \"data\": [\n                {\n                    \"name\": \"default\",\n                    \"scope member\": {\n                        \"name\": \"All_FortiGate\"\n                    }\n                },\n\n                {\n                    \"name\": \"Hub1_Policy_Pkg\",\n                    \"package settings\": {\n                        \"central-nat\": 0,\n                        \"consolidated-firewall-mode\": 0,\n                        \"fwpolicy-implicit-log\": 0,\n                        \"fwpolicy6-implicit-log\": 0,\n                        \"ngfw-mode\": 0\n                    },\n                    \"type\": \"pkg\"\n                },\n\n                {\n                    \"name\": \"Hub2_Policy_Pkg\",\n                    \"package settings\": {\n                        \"central-nat\": 0,\n                        \"consolidated-firewall-mode\": 0,\n                        \"fwpolicy-implicit-log\": 0,\n                        \"fwpolicy6-implicit-log\": 0,\n                        \"ngfw-mode\": 0\n                    },\n                    \"type\": \"pkg\"\n                },\n\n                {\n                    \"name\": \"PIP_and_Broadband_sites\",\n                    \"package settings\": {\n                        \"central-nat\": 0,\n                        \"consolidated-firewall-mode\": 0,\n                        \"fwpolicy-implicit-log\": 0,\n                        \"fwpolicy6-implicit-log\": 0,\n                        \"ngfw-mode\": 0\n                    },\n                    \"scope member\": {\n                        \"name\": \"pip-broadband\"\n                    },\n                    \"type\": \"pkg\"\n                },\n\n\n\n                {\n                    \"name\": \"Dual_Broadband_Sites\",\n                    \"package settings\": {\n                        \"central-nat\": 0,\n                        \"consolidated-firewall-mode\": 0,\n                        \"fwpolicy-implicit-log\": 0,\n                        \"fwpolicy6-implicit-log\": 0,\n                        \"ngfw-mode\": 0\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"type\": \"pkg\"\n                },             \n\n\n                {\n                    \"name\": \"Broadband_and_LTE_Sites\",\n                    \"package settings\": {\n                        \"central-nat\": 0,\n                        \"consolidated-firewall-mode\": 0,\n                        \"fwpolicy-implicit-log\": 0,\n                        \"fwpolicy6-implicit-log\": 0,\n                        \"ngfw-mode\": 0\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"type\": \"pkg\"\n                }              \n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "6 - Add Firewall Rules  - Hub 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/pkg/Hub1_Policy_Pkg/firewall/policy/\",\n            \"data\": [\n                {\n                    \"name\": \"MNSO to Mgmt Loopback via MPLS\",\n                    \"policyid\": 10,\n                    \"srcintf\": [\n                        \"Underlay\"\n                    ],\n                    \"dstintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"srcaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"dstaddr\": \"Mgmt_Loopback\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n\n                {\n                    \"name\": \"Mgmt Loopback to MNSO via MPLS\",\n                    \"policyid\": 20,\n                    \"srcintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"dstintf\": [\n                        \"Underlay\"\n                    ],\n                    \"srcaddr\":\"Mgmt_Loopback\",\n                    \"dstaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n                {\n                    \"name\": \"MNSO to Mgmt Loopback via Headends\",\n                    \"policyid\": 30,\n                    \"srcintf\": [\n                        \"Mgmt_H1N1\",\n                        \"Mgmt_H2N1\"\n                    ],\n                    \"dstintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"srcaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"dstaddr\": \"Mgmt_Loopback\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n                {\n                    \"name\": \"Mgmt Loopback to MNSO via Headends\",\n                    \"policyid\": 40,\n                    \"srcintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"dstintf\": [\n                        \"Mgmt_H1N1\",\n                        \"Mgmt_H2N1\"\n                    ],\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n                {\n                    \"name\": \"Spokes Health Checks\",\n                    \"policyid\": 50,\n                    \"srcintf\": \"Overlay\",\n                    \"dstintf\": \"HC_Loopback\",\n                    \"srcaddr\":\"all\",\n                    \"dstaddr\": \"Hubs_Health_Check_10.200.99.1\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"LAN to Spokes\",\n                    \"policyid\": 60,\n                    \"srcintf\": \"LAN\",\n                    \"dstintf\": \"Overlay\",\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": \"Spokes_LANs_10.50.0.0/16\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"Spokes to LAN\",\n                    \"policyid\": 70,\n                    \"srcintf\":\"Overlay\",\n                    \"dstintf\": \"LAN\",\n                    \"srcaddr\":\"Spokes_LANs_10.50.0.0/16\",\n                    \"dstaddr\": \"LAN\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"Spokes to Spokes [ADVPN]\",\n                    \"policyid\": 80,\n                    \"srcintf\":\"Overlay\",\n                    \"dstintf\": \"Overlay\",\n                    \"srcaddr\":\"Spokes_LANs_10.50.0.0/16\",\n                    \"dstaddr\": \"Spokes_LANs_10.50.0.0/16\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"ADVPN Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"LAN to Internet\",\n                    \"policyid\": 90,\n                    \"srcintf\": \"LAN\",\n                    \"dstintf\": \"Internet\",\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"nat\": 1,\n                    \"label\": \"Internet Traffic\"\n                },\n\n\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "6 - Add Firewall Rules  - Hub 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/pkg/Hub2_Policy_Pkg/firewall/policy/\",\n            \"data\": [\n                {\n                    \"name\": \"MNSO to Mgmt Loopback via MPLS\",\n                    \"policyid\": 10,\n                    \"srcintf\": [\n                        \"Underlay\"\n                    ],\n                    \"dstintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"srcaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"dstaddr\": \"Mgmt_Loopback\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n\n                {\n                    \"name\": \"Mgmt Loopback to MNSO via MPLS\",\n                    \"policyid\": 20,\n                    \"srcintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"dstintf\": [\n                        \"Underlay\"\n                    ],\n                    \"srcaddr\":\"Mgmt_Loopback\",\n                    \"dstaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n                {\n                    \"name\": \"MNSO to Mgmt Loopback via Headends\",\n                    \"policyid\": 30,\n                    \"srcintf\": [\n                        \"Mgmt_H1N1\",\n                        \"Mgmt_H2N1\"\n                    ],\n                    \"dstintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"srcaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"dstaddr\": \"Mgmt_Loopback\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n                {\n                    \"name\": \"Mgmt Loopback to MNSO via Headends\",\n                    \"policyid\": 40,\n                    \"srcintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"dstintf\": [\n                        \"Mgmt_H1N1\",\n                        \"Mgmt_H2N1\"\n                    ],\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n                {\n                    \"name\": \"Spokes Health Checks\",\n                    \"policyid\": 50,\n                    \"srcintf\": \"Overlay\",\n                    \"dstintf\": \"HC_Loopback\",\n                    \"srcaddr\":\"all\",\n                    \"dstaddr\": \"Hubs_Health_Check_10.200.99.1\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"LAN to Spokes\",\n                    \"policyid\": 60,\n                    \"srcintf\": \"LAN\",\n                    \"dstintf\": \"Overlay\",\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": \"Spokes_LANs_10.50.0.0/16\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"Spokes to LAN\",\n                    \"policyid\": 70,\n                    \"srcintf\":\"Overlay\",\n                    \"dstintf\": \"LAN\",\n                    \"srcaddr\":\"Spokes_LANs_10.50.0.0/16\",\n                    \"dstaddr\": \"LAN\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"Spokes to Spokes [ADVPN]\",\n                    \"policyid\": 80,\n                    \"srcintf\":\"Overlay\",\n                    \"dstintf\": \"Overlay\",\n                    \"srcaddr\":\"Spokes_LANs_10.50.0.0/16\",\n                    \"dstaddr\": \"Spokes_LANs_10.50.0.0/16\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"ADVPN Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"LAN to Internet\",\n                    \"policyid\": 90,\n                    \"srcintf\": \"LAN\",\n                    \"dstintf\": \"Internet\",\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"nat\": 1,\n                    \"label\": \"Internet Traffic\"\n                },\n\n\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "6 - Add Firewall Rules  - PIP_and_Broadband",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/pkg/PIP_and_Broadband_sites/firewall/policy/\",\n            \"data\": [\n                {\n                    \"name\": \"MNSO to Mgmt Loopback via MPLS\",\n                    \"policyid\": 1,\n                    \"srcintf\": [\n                        \"Underlay\"\n                    ],\n                    \"dstintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"srcaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"dstaddr\": \"Mgmt_Loopback\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n\n                {\n                    \"name\": \"Mgmt Loopback to MNSO via MPLS\",\n                    \"policyid\": 2,\n                    \"srcintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"dstintf\": [\n                        \"Underlay\"\n                    ],\n                    \"srcaddr\":\"Mgmt_Loopback\",\n                    \"dstaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n                {\n                    \"name\": \"MNSO to Mgmt Loopback via Headends\",\n                    \"policyid\": 3,\n                    \"srcintf\": [\n                        \"Mgmt_H1N1\",\n                        \"Mgmt_H2N1\"\n                    ],\n                    \"dstintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"srcaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"dstaddr\": \"Mgmt_Loopback\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n                {\n                    \"name\": \"Mgmt Loopback to MNSO via Headends\",\n                    \"policyid\": 4,\n                    \"srcintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"dstintf\": [\n                        \"Mgmt_H1N1\",\n                        \"Mgmt_H2N1\"\n                    ],\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n                {\n                    \"name\": \"Hubs Health Checks\",\n                    \"policyid\": 8,\n                    \"srcintf\": \"LAN\",\n                    \"dstintf\": \"Overlay\",\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": \"Spokes_LANs_10.50.0.0/16\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"LAN to Spokes\",\n                    \"policyid\": 5,\n                    \"srcintf\": \"LAN\",\n                    \"dstintf\": \"Overlay\",\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": \"Spokes_LANs_10.50.0.0/16\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"Spokes to LAN\",\n                    \"policyid\": 6,\n                    \"srcintf\":\"Overlay\",\n                    \"dstintf\": \"LAN\",\n                    \"srcaddr\":\"Spokes_LANs_10.50.0.0/16\",\n                    \"dstaddr\": \"LAN\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"LAN to Internet\",\n                    \"policyid\": 7,\n                    \"srcintf\": \"LAN\",\n                    \"dstintf\": \"Internet\",\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"nat\": 1,\n                    \"label\": \"Internet Traffic\"\n                },\n\n\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "6 - Add Firewall Rules  - Dual Broadband",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/pkg/Dual_Broadband_Sites/firewall/policy/\",\n            \"data\": [\n                {\n                    \"name\": \"MNSO to Mgmt Loopback via Headends\",\n                    \"policyid\": 1,\n                    \"srcintf\": [\n                        \"Mgmt_H1N1\",\n                        \"Mgmt_H1N2\",\n                        \"Mgmt_H2N1\",\n                        \"Mgmt_H2N2\"\n                    ],\n                    \"dstintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"srcaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"dstaddr\": \"Mgmt_Loopback\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n                {\n                    \"name\": \"Mgmt Loopback to MNSO via Headends\",\n                    \"policyid\": 2,\n                    \"srcintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"dstintf\": [\n                        \"Mgmt_H1N1\",\n                        \"Mgmt_H1N2\",\n                        \"Mgmt_H2N1\",\n                        \"Mgmt_H2N2\"\n                    ],\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n                {\n                    \"name\": \"LAN to Spokes\",\n                    \"policyid\": 3,\n                    \"srcintf\": \"LAN\",\n                    \"dstintf\": \"Overlay\",\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": \"Spokes_LANs_10.50.0.0/16\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"Spokes to LAN\",\n                    \"policyid\": 4,\n                    \"srcintf\":\"Overlay\",\n                    \"dstintf\": \"LAN\",\n                    \"srcaddr\":\"Spokes_LANs_10.50.0.0/16\",\n                    \"dstaddr\": \"LAN\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"LAN to Internet\",\n                    \"policyid\": 5,\n                    \"srcintf\": \"LAN\",\n                    \"dstintf\": \"Underlay\",\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"nat\": 1,\n                    \"label\": \"Internet Traffic\"\n                },\n\n\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "6 - Add Firewall Rules  - Broadband + LTE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/pkg/Broadband_and_LTE_Sites/firewall/policy/\",\n            \"data\": [\n                {\n                    \"name\": \"MNSO to Mgmt Loopback via Headend 1\",\n                    \"policyid\": 1,\n                    \"srcintf\": [\n                        \"Mgmt_H1N1\",\n                        \"Mgmt_H1N2\"\n                    ],\n                    \"dstintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"srcaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"dstaddr\": \"Mgmt_Loopback\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n                {\n                    \"name\": \"Mgmt Loopback to MNSO via Headend 2\",\n                    \"policyid\": 2,\n                    \"srcintf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"dstintf\": [\n                        \"Mgmt_H2N1\",\n                        \"Mgmt_H2N2\"\n                    ],\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": [\n                        \"Headend1_LAN_10.20.100.0/24\",\n                        \"Headend2_LAN_10.20.200.0/24\"\n                    ],\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Management Traffic\"\n                },\n\n                {\n                    \"name\": \"LAN to Spokes\",\n                    \"policyid\": 3,\n                    \"srcintf\": \"LAN\",\n                    \"dstintf\": \"Overlay\",\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": \"Spokes_LANs_10.50.0.0/16\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"Spokes to LAN\",\n                    \"policyid\": 4,\n                    \"srcintf\":\"Overlay\",\n                    \"dstintf\": \"LAN\",\n                    \"srcaddr\":\"Spokes_LANs_10.50.0.0/16\",\n                    \"dstaddr\": \"LAN\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"label\": \"Overlay Traffic\"\n                },\n\n                {\n                    \"name\": \"LAN to Internet\",\n                    \"policyid\": 5,\n                    \"srcintf\": \"LAN\",\n                    \"dstintf\": \"Internet\",\n                    \"srcaddr\":\"LAN\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2,\n                    \"logtraffic-start\": 1,\n                    \"nat\": 1,\n                    \"label\": \"Internet Traffic\"\n                },\n\n\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9 - Prepare Default Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/pkg/default/firewall/policy/\",\n            \"data\": [\n                {\n                    \"name\": \"Permit Any-Any\",\n                    \"policyid\": 1,\n                    \"srcintf\": \"any\",\n                    \"dstintf\": \"any\",\n                    \"srcaddr\": \"all\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "10 - Create Meta Fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/_meta_fields/device\",\n            \"data\": [\n                {\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"name\": \"hub-id\",\n                    \"status\": 1\n                },\n                {\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"name\": \"peer-dc-id\",\n                    \"status\": 1\n                },\n                {\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"name\": \"branch-id\",\n                    \"status\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "11 - Add Script - Cleanup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({",
									"    url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"    method: 'POST',",
									"    header: \"Content-Type:application/json\",",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/sys/status\"}]})",
									"    }",
									"}, function (err, response) {",
									"    var sn = response.json().result[0].data[\"Serial Number\"];",
									"    pm.environment.set(\"sn_fmg\", sn)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"script_schedule\": null,\n                    \"name\": \"Cleanup\",\n                    \"type\": \"cli\",\n                    \"desc\": \"Don't Use this script\",\n                    \"content\": \"# Cleanup BGP and SD-WAN Configuration\nconfig system sdwan\n  unset status\n  config service\n    purge\n  end\n  config health-check\n    purge\n  end    \n  config members\n    purge\n  end\n  config zone\n    purge\n  end\nend\nconfig router bgp\n  unset as \n  unset router-id \n  unset keepalive-timer \n  unset holdtime-timer \n  unset ibgp-multipath \n  unset network-import-check \n  unset additional-path \n  unset scan-time \n  config neighbor-range\n    purge\n  end\n  config neighbor-group\n    purge\n  end\n  config neighbor\n    purge\n  end\n  config network\n    purge\n  end\n  config vrf-leak\n    purge\n  end\nend\nconfig router policy\n  purge\nend\nconfig router route-map\n   purge\nend\nconfig router prefix-list\n   purge\nend\n\",\n                    \"target\": \"device_database\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "12 - Add Mgmt VPN Tunnels for Hubs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/vpnmgr/node\",\n            \"data\": [\n                {\n                    \"id\": 1,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"hubs\"\n                    },\n                    \"vpntable\": \"Mgmt_H1N1\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n                {\n                    \"id\": 2,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"hubs\"\n                    },\n                    \"vpntable\": \"Mgmt_H2N1\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "13 - Add Mgmt & Overlay VPN Tunnels for Dual Broadband Hosts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/vpnmgr/node\",\n            \"data\": [\n                {\n                    \"id\": 3,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"Mgmt_H1N1\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n                {\n                    \"id\": 4,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"Mgmt_H2N1\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n\n                {\n                    \"id\": 5,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"Mgmt_H1N2\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n                {\n                    \"id\": 6,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"Mgmt_H2N2\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n\n                {\n                    \"id\": 7,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"WAN_ID1\",\n                    \"role\": 1,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 8,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"WAN_ID2\",\n                    \"role\": 1,\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 9,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"WAN_ID4\",\n                    \"role\": 1,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 10,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"WAN_ID5\",\n                    \"role\": 1,\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "14 - Add Mgmt VPN Tunnels for PIP + Broadband Hosts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/vpnmgr/node\",\n            \"data\": [\n                {\n                    \"id\": 11,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"pip-broadband\"\n                    },\n                    \"vpntable\": \"Mgmt_H1N1\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n                {\n                    \"id\": 12,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"pip-broadband\"\n                    },\n                    \"vpntable\": \"Mgmt_H2N1\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n\n                {\n                    \"id\": 13,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"pip-broadband\"\n                    },\n                    \"vpntable\": \"WAN_ID1\",\n                    \"role\": 1,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                    \"assign-ip\": 1,\n                    \"dhcp-server\": 0\n                },\n\n                {\n                    \"id\": 8,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"pip-broadband\"\n                    },\n                    \"vpntable\": \"WAN_ID3\",\n                    \"role\": 1,\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 14,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"pip-broadband\"\n                    },\n                    \"vpntable\": \"WAN_ID4\",\n                    \"role\": 1,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 15,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"pip-broadband\"\n                    },\n                    \"vpntable\": \"WAN_ID6\",\n                    \"role\": 1,\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "14 - Add Mgmt VPN Tunnels for Broadband + LTE Hosts Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/vpnmgr/node\",\n            \"data\": [\n                {\n                    \"id\": 16,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"Mgmt_H1N1\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n                {\n                    \"id\": 17,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"Mgmt_H2N1\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n\n                {\n                    \"id\": 18,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"Mgmt_H1N2\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n                {\n                    \"id\": 19,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"Mgmt_H2N2\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n\n                {\n                    \"id\": 20,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"WAN_ID1\",\n                    \"role\": 1,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 21,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"WAN_ID2\",\n                    \"role\": 1,\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 22,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"WAN_ID4\",\n                    \"role\": 1,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 23,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"WAN_ID5\",\n                    \"role\": 1,\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Step 2 - Populate Basic SD-WAN Values",
			"item": [
				{
					"name": "15 -  Create SD-WAN Interface Members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/virtual-wan-link/members\",\n            \"data\": [\n                {\n                    \"name\": \"wan1\",\n                    \"interface\": \"wan1\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 0,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"wan2\",\n                    \"interface\": \"wan2\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 0,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"FEX\",\n                    \"interface\": \"FEX\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 0,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"WAN_ID1\",\n                    \"interface\": \"WAN_ID1\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 0,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"WAN_ID2\",\n                    \"interface\": \"WAN_ID2\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 0,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"WAN_ID3\",\n                    \"interface\": \"WAN_ID3\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 0,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"WAN_ID4\",\n                    \"interface\": \"WAN_ID4\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 0,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"WAN_ID5\",\n                    \"interface\": \"WAN_ID5\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 0,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"WAN_ID6\",\n                    \"interface\": \"WAN_ID6\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 0,\n                    \"status\": 1\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "16 - Create SD-WAN Health Check Servers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/virtual-wan-link/server\",\n            \"data\": [\n                {\n                    \"name\": \"Hubs_probe_Loopback\",\n                    \"description\": null,\n                    \"server\": [\n                        \"10.200.99.1\"\n                    ],\n                    \"dynamic_mapping\": null\n                },\n                {\n                    \"name\": \"Fortinet\",\n                    \"description\": null,\n                    \"server\": [\n                        \"www.fortinet.com\"\n                    ],\n                    \"dynamic_mapping\": null\n                },\n                {\n                    \"name\": \"Google\",\n                    \"description\": null,\n                    \"server\": [\n                        \"www.google.com\"\n                    ],\n                    \"dynamic_mapping\": null\n                },\n                {\n                    \"name\": \"Gmail\",\n                    \"description\": null,\n                    \"server\": [\n                        \"www.Gmail.com\"\n                    ],\n                    \"dynamic_mapping\": null\n                },\n                {\n                    \"name\": \"Office365\",\n                    \"description\": null,\n                    \"server\": [\n                        \"www.office365.com\"\n                    ],\n                    \"dynamic_mapping\": null\n                },\n                {\n                    \"name\": \"cnn.com\",\n                    \"description\": null,\n                    \"server\": [\n                        \"www.cnn.com.com\"\n                    ],\n                    \"dynamic_mapping\": null\n                },\n                {\n                    \"name\": \"fortiguard.com\",\n                    \"description\": null,\n                    \"server\": [\n                        \"fortiguard.com\"\n                    ],\n                    \"dynamic_mapping\": null\n                },\n                {\n                    \"name\": \"Microsoft Update\",\n                    \"description\": null,\n                    \"server\": [\n                        \"update.microsoft.com\"\n                    ],\n                    \"dynamic_mapping\": null\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "17 - Create SDWAN Template - 1 - Hub 1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/\",\n            \"data\": \n            {\n            \t\"name\": \"1 - Hub 1 - Primary - SDWAN Template\",\n            \t\"type\": \"wanprof\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "19.2 - Populate SDWAN Template - 1 - Hub 1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"replace\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/wanprof/1 - Hub 1 - Primary - SDWAN Template/system/sdwan\",\n            \"data\": {\n                \"status\": 1,\n                \"load-balance-mode\": 1,\n                \"fail-detect\": \"disable\",\n                \"zone\": [\n                    {\n                        \"name\": \"Internet\"\n                    },\n                    {\n                        \"name\": \"Underlay\"\n                    },\n                    {\n                        \"name\": \"Overlay\"\n                    }\n                ],\n                \"members\": [\n                    {\n                        \"_dynamic-member\": \"wan1\",\n                        \"zone\": \"Internet\"\n                    },\n                    {\n                        \"_dynamic-member\": \"wan2\",\n                        \"zone\": \"Underlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID1\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID2\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID3\",\n                        \"zone\": \"Overlay\"\n                    },\n                ],\n                \"health-check\": \n                [\n                    {\n                        \"name\": \"Hubs_probe_Loopback\",\n                        \"_dynamic-server\": [\n                            \"Hubs_probe_Loopback\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            3,\n                            4,\n                            5\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 50,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"Office365\",\n                        \"_dynamic-server\": [\n                            \"Office365\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            1,\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"fortiguard.com\",\n                        \"_dynamic-server\": [\n                            \"fortiguard.com\"\n                        ],\n                        \"protocol\": 8,\n                        \"members\": [\n                            1,\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"Microsoft_Update\",\n                        \"_dynamic-server\": [\n                            \"Microsoft Update\"\n                        ],\n                        \"protocol\": 8,\n                        \"members\": [\n                            1,\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    }\n                ],\n                \"service\": [\n                    {\n                        \"id\": 1,\n                        \"name\": \"LAN_to_Spokes_INET\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"Spokes_LANs_10.50.0.0/16\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Hubs_probe_Loopback\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            3,\n                            4\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                    {\n                        \"id\": 2,\n                        \"name\": \"LAN_to_Spokes_MPLS\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"Spokes_LANs_10.50.0.0/16\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Hubs_probe_Loopback\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            5,\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                    {\n                        \"id\": 3,\n                        \"name\": \"LAN_to_Internet\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"all\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"fortiguard.com\",\n                                \"id\": 1\n                                \n                            }\n                        ],\n                        \"priority-members\": [\n                            1\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                ]\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "17 - Create SDWAN Template - 2- Hub 2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/\",\n            \"data\": \n            {\n            \t\"name\": \"2 - Hub 2 - Secondary - SDWAN Template\",\n            \t\"type\": \"wanprof\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "19.2 - Populate SDWAN Template - 2 - Hub 2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"replace\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/wanprof/2 - Hub 2 - Secondary - SDWAN Template/system/sdwan\",\n            \"data\": {\n                \"status\": 1,\n                \"load-balance-mode\": 1,\n                \"fail-detect\": \"disable\",\n                \"zone\": [\n                    {\n                        \"name\": \"Internet\"\n                    },\n                    {\n                        \"name\": \"Underlay\"\n                    },\n                    {\n                        \"name\": \"Overlay\"\n                    }\n                ],\n                \"members\": [\n                    {\n                        \"_dynamic-member\": \"wan1\",\n                        \"zone\": \"Internet\"\n                    },\n                    {\n                        \"_dynamic-member\": \"wan2\",\n                        \"zone\": \"Underlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID4\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID5\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID6\",\n                        \"zone\": \"Overlay\"\n                    },\n                ],\n                \"health-check\": \n                [\n                    {\n                        \"name\": \"Hubs_probe_Loopback\",\n                        \"_dynamic-server\": [\n                            \"Hubs_probe_Loopback\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            3,\n                            4,\n                            5\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 50,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"Office365\",\n                        \"_dynamic-server\": [\n                            \"Office365\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            1,\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"fortiguard.com\",\n                        \"_dynamic-server\": [\n                            \"fortiguard.com\"\n                        ],\n                        \"protocol\": 8,\n                        \"members\": [\n                            1,\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"Microsoft_Update\",\n                        \"_dynamic-server\": [\n                            \"Microsoft Update\"\n                        ],\n                        \"protocol\": 8,\n                        \"members\": [\n                            1,\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    }\n                ],\n                \"service\": [\n                    {\n                        \"id\": 1,\n                        \"name\": \"LAN_to_Spokes_INET\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"Spokes_LANs_10.50.0.0/16\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Hubs_probe_Loopback\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            3,\n                            4\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                    {\n                        \"id\": 2,\n                        \"name\": \"LAN_to_Spokes_MPLS\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"Spokes_LANs_10.50.0.0/16\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Hubs_probe_Loopback\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            5,\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                    {\n                        \"id\": 3,\n                        \"name\": \"LAN_to_Internet\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"all\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"fortiguard.com\",\n                                \"id\": 1\n                                \n                            }\n                        ],\n                        \"priority-members\": [\n                            1\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                ]\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "19.1 - Create SDWAN Template - 3 - PIP + Broadband",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/\",\n            \"data\": \n            {\n            \t\"name\": \"3 - PIP & Broadband SDWAN Template\",\n            \t\"type\": \"wanprof\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "19.2 - Populate SDWAN Template - 3 - PIP & Broadband",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"replace\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/wanprof/3 - PIP & Broadband SDWAN Template/system/sdwan\",\n            \"data\": {\n                \"status\": 1,\n                \"load-balance-mode\": 1,\n                \"fail-detect\": \"disable\",\n                \"zone\": [\n                    {\n                        \"name\": \"Internet\"\n                    },\n                    {\n                        \"name\": \"Underlay\"\n                    },\n                    {\n                        \"name\": \"Overlay\"\n                    }\n                ],\n                \"members\": [\n                    {\n                        \"_dynamic-member\": \"wan1\",\n                        \"zone\": \"Internet\"\n                    },\n                    {\n                        \"_dynamic-member\": \"wan2\",\n                        \"zone\": \"Underlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID1\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID3\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID4\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID6\",\n                        \"zone\": \"Overlay\"\n                    }\n                ],\n                \"health-check\": \n                [\n                    {\n                        \"name\": \"Hubs_probe_Loopback\",\n                        \"_dynamic-server\": [\n                            \"Hubs_probe_Loopback\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            3,\n                            4,\n                            5,\n                            6\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 50,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"Office365\",\n                        \"_dynamic-server\": [\n                            \"Office365\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            1,\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"fortiguard.com\",\n                        \"_dynamic-server\": [\n                            \"fortiguard.com\"\n                        ],\n                        \"protocol\": 8,\n                        \"members\": [\n                            1,\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"Microsoft_Update\",\n                        \"_dynamic-server\": [\n                            \"Microsoft Update\"\n                        ],\n                        \"protocol\": 8,\n                        \"members\": [\n                            1,\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    }\n                ],\n                \"service\": [\n                    {\n                        \"id\": 1,\n                        \"name\": \"LAN_to_Spokes_Hub1\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"Spokes_LANs_10.50.0.0/16\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Hubs_probe_Loopback\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            3,\n                            4\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                    {\n                        \"id\": 2,\n                        \"name\": \"LAN_to_Spokes_Hub2\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"Spokes_LANs_10.50.0.0/16\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Hubs_probe_Loopback\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            5,\n                            6\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                    {\n                        \"id\": 3,\n                        \"name\": \"LAN_to_Internet\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"all\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"fortiguard.com\",\n                                \"id\": 1\n                                \n                            }\n                        ],\n                        \"priority-members\": [\n                            1\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                ]\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "17 - Create SDWAN Template - 4 - Dual Broadband",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/\",\n            \"data\": \n            {\n            \t\"name\": \"4 - Dual Broadband - WAN 1 & WAN 2\",\n            \t\"type\": \"wanprof\"\n            },\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "19.2 - Populate SDWAN Template - 4 - Dual Broadband",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"replace\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/wanprof/4 - Dual Broadband - WAN 1 & WAN 2/system/sdwan\",\n            \"data\": {\n                \"status\": 1,\n                \"load-balance-mode\": 1,\n                \"fail-detect\": \"disable\",\n                \"zone\": [\n                    {\n                        \"name\": \"Underlay\"\n                    },\n                    {\n                        \"name\": \"Overlay\"\n                    }\n                ],\n                \"members\": [\n                    {\n                        \"_dynamic-member\": \"wan1\",\n                        \"zone\": \"Underlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"wan2\",\n                        \"zone\": \"Underlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID1\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID2\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID4\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID5\",\n                        \"zone\": \"Overlay\"\n                    }\n                ],\n                \"health-check\": \n                [\n                    {\n                        \"name\": \"Hubs_probe_Loopback\",\n                        \"_dynamic-server\": [\n                            \"Hubs_probe_Loopback\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            3,\n                            4,\n                            5,\n                            6\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 50,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"Office365\",\n                        \"_dynamic-server\": [\n                            \"Office365\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            1,\n                            2\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"fortiguard.com\",\n                        \"_dynamic-server\": [\n                            \"fortiguard.com\"\n                        ],\n                        \"protocol\": 8,\n                        \"members\": [\n                            1,\n                            2\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"Microsoft_Update\",\n                        \"_dynamic-server\": [\n                            \"Microsoft Update\"\n                        ],\n                        \"protocol\": 8,\n                        \"members\": [\n                            1,\n                            2\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    }\n                ],\n                \"service\": [\n                    {\n                        \"id\": 1,\n                        \"name\": \"LAN_to_Spokes_Hub1\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"Spokes_LANs_10.50.0.0/16\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Hubs_probe_Loopback\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            3,\n                            4\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                    {\n                        \"id\": 2,\n                        \"name\": \"LAN_to_Spokes_Hub2\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"Spokes_LANs_10.50.0.0/16\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Hubs_probe_Loopback\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            5,\n                            6\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                    {\n                        \"id\": 3,\n                        \"name\": \"LAN_to_Internet\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"all\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"fortiguard.com\",\n                                \"id\": 1\n                                \n                            }\n                        ],\n                        \"priority-members\": [\n                            1,\n                            2\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                ]\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "17 - Create SDWAN Template - 5 - Broadband + LTE",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/\",\n            \"data\": \n            {\n            \t\"name\": \"5_Dual_Broadband_[Broadband + LTE]\",\n            \t\"type\": \"wanprof\"\n            },\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "19.2 - Populate SDWAN Template - 5 - Broadband + LTE",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"replace\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/wanprof/5_Dual_Broadband_[Broadband + LTE]/system/sdwan\",\n            \"data\": {\n                \"status\": 1,\n                \"load-balance-mode\": 1,\n                \"fail-detect\": \"disable\",\n                \"zone\": [\n                    {\n                        \"name\": \"Underlay\"\n                    },\n                    {\n                        \"name\": \"Overlay\"\n                    }\n                ],\n                \"members\": [\n                    {\n                        \"_dynamic-member\": \"wan1\",\n                        \"zone\": \"Underlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"wan2\",\n                        \"zone\": \"Underlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID1\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID2\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID4\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID5\",\n                        \"zone\": \"Overlay\"\n                    }\n                ],\n                \"health-check\": \n                [\n                    {\n                        \"name\": \"Hubs_probe_Loopback\",\n                        \"_dynamic-server\": [\n                            \"Hubs_probe_Loopback\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            3,\n                            4,\n                            5,\n                            6\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 50,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"Office365\",\n                        \"_dynamic-server\": [\n                            \"Office365\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            1,\n                            2\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"fortiguard.com\",\n                        \"_dynamic-server\": [\n                            \"fortiguard.com\"\n                        ],\n                        \"protocol\": 8,\n                        \"members\": [\n                            1,\n                            2\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"Microsoft_Update\",\n                        \"_dynamic-server\": [\n                            \"Microsoft Update\"\n                        ],\n                        \"protocol\": 8,\n                        \"members\": [\n                            1,\n                            2\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    }\n                ],\n                \"service\": [\n                    {\n                        \"id\": 1,\n                        \"name\": \"LAN_to_Spokes_Hub1\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"Spokes_LANs_10.50.0.0/16\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Hubs_probe_Loopback\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            3,\n                            4\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                    {\n                        \"id\": 2,\n                        \"name\": \"LAN_to_Spokes_Hub2\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"Spokes_LANs_10.50.0.0/16\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Hubs_probe_Loopback\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            5,\n                            6\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                    {\n                        \"id\": 3,\n                        \"name\": \"LAN_to_Internet\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"all\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"fortiguard.com\",\n                                \"id\": 1\n                                \n                            }\n                        ],\n                        \"priority-members\": [\n                            1,\n                            2\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                ]\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "17 - Create SDWAN Template - 6 - 40F",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/\",\n            \"data\": \n            {\n            \t\"name\": \"Dual_Broadband_[Broadband + Built in LTE]\",\n            \t\"type\": \"wanprof\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "19.2 - Populate SDWAN Template - 6 - 40F",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"replace\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/wanprof/Dual_Broadband_[Broadband + Built in LTE]/system/sdwan\",\n            \"data\": {\n                \"status\": 1,\n                \"load-balance-mode\": 1,\n                \"fail-detect\": \"disable\",\n                \"zone\": [\n                    {\n                        \"name\": \"Underlay\"\n                    },\n                    {\n                        \"name\": \"Overlay\"\n                    }\n                ],\n                \"members\": [\n                    {\n                        \"_dynamic-member\": \"wan1\",\n                        \"zone\": \"Underlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"FEX\",\n                        \"zone\": \"Underlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID1\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID2\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID4\",\n                        \"zone\": \"Overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"WAN_ID5\",\n                        \"zone\": \"Overlay\"\n                    }\n                ],\n                \"health-check\": \n                [\n                    {\n                        \"name\": \"Hubs_probe_Loopback\",\n                        \"_dynamic-server\": [\n                            \"Hubs_probe_Loopback\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            3,\n                            4,\n                            5,\n                            6\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 50,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"Office365\",\n                        \"_dynamic-server\": [\n                            \"Office365\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            1,\n                            2\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"fortiguard.com\",\n                        \"_dynamic-server\": [\n                            \"fortiguard.com\"\n                        ],\n                        \"protocol\": 8,\n                        \"members\": [\n                            1,\n                            2\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    },\n\n                    {\n                        \"name\": \"Microsoft_Update\",\n                        \"_dynamic-server\": [\n                            \"Microsoft Update\"\n                        ],\n                        \"protocol\": 8,\n                        \"members\": [\n                            1,\n                            2\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 0,\n                        \"update-static-route\": 0,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 150,\n                                \"link-cost-factor\": 1,\n                                \"packetloss-threshold\": 2\n                            }\n                        ]\n                    }\n                ],\n                \"service\": [\n                    {\n                        \"id\": 1,\n                        \"name\": \"LAN_to_Spokes_Hub1\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"Spokes_LANs_10.50.0.0/16\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Hubs_probe_Loopback\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            3,\n                            4\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                    {\n                        \"id\": 2,\n                        \"name\": \"LAN_to_Spokes_Hub2\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"Spokes_LANs_10.50.0.0/16\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Hubs_probe_Loopback\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            5,\n                            6\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                    {\n                        \"id\": 3,\n                        \"name\": \"LAN_to_Internet\",\n                        \"src\": \"LAN\",\n                        \"dst\": \"all\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 5,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"fortiguard.com\",\n                                \"id\": 1\n                                \n                            }\n                        ],\n                        \"priority-members\": [\n                            1,\n                            2\n                        ],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n\n                ]\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dual Hub - Day 1 Configuration",
			"item": [
				{
					"name": "Hub 1 - Complete Configurations",
					"item": [
						{
							"name": "1 - Onboarding",
							"item": [
								{
									"name": "1 - Discover Hub 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"sn = jsonData.result[0].data.device.sn;",
													"hostname = jsonData.result[0].data.device.name;",
													"",
													"pm.environment.set(\"Hub1_FGT_SN\", sn);",
													"pm.environment.set(\"Hub1_FGT_Name\", hostname);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvm/cmd/discover/device\",\n            \"data\": {\n                \"device\": {\n                    \"adm_pass\": \"{{password}}\",\n                    \"adm_usr\": \"{{username}}\",\n                    \"ip\": \"{{Hub1_FGT_IP}}\"\n                }\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "2 - Add Hub 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"function waitOnTask(retries) {",
													"    if (!retries) {",
													"        pm.test(\"Task completed\", function() {",
													"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
													"        });",
													"        postman.setNextRequest(null);",
													"    }",
													"    else {",
													"        pm.sendRequest({",
													"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
													"            method: 'POST',",
													"            header: \"Content-Type:application/json\",",
													"            body: {",
													"                mode: 'raw',",
													"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
													"            }",
													"        }, function(err, response) {",
													"            var jsonData = response.json();",
													"            if (jsonData.result[0].data.percent == 100) {",
													"                // Task completed",
													"                if (jsonData.result[0].data.num_err) {",
													"                    postman.setNextRequest(null);",
													"                }",
													"                pm.test(\"Task completed\", function() {",
													"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
													"                });",
													"            }",
													"            else {",
													"                console.log(\"Task is still not complete\");",
													"                setTimeout(function() {",
													"                    waitOnTask(--retries);",
													"                }, 10000);",
													"            }",
													"        }); ",
													"    }",
													"}",
													"",
													"var jsonData = pm.response.json();",
													"var taskid = jsonData.result[0].data.taskid;",
													"",
													"waitOnTask(10);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvm/cmd/add/dev-list\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"flags\": [\"create_task\", \"nonblocking\"],\n                \"add-dev-list\": [\n                    {\n\t                    \"adm_pass\": \"{{password}}\",\n\t                    \"adm_usr\": \"{{username}}\",\n                        \"ip\": \"{{Hub1_FGT_IP}}\",\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"sn\": \"{{Hub1_FGT_SN}}\",\n                        \"mgmt_mode\": \"fmgfaz\",\n                        \"flags\": 24\n                    },\n\n                ]\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "2 - Hub 1 Dynamic Addresses",
							"item": [
								{
									"name": "3 - Add Mgmt_Loopback Address Objects for Hub 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/firewall/address/Mgmt_Loopback/dynamic_mapping\",\n            \"data\": \n                    {\n                    \"_scope\": [\n                        {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                        }\n                    ],\n                    \"associated-interface\": \"Mgmt_Loopback\",\n                    \"subnet\": \"{{Hub1_FGT_IP}} 255.255.255.255\"\n                    }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "4 - Add LAN Address Objects for Hub 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/firewall/address/LAN/dynamic_mapping\",\n            \"data\": \n                    {\n                    \"_scope\": [\n                        {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                        }\n                    ],\n                    \"subnet\": \"{{Hub1_FGT_LAN}}\"\n                    }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "3 - Overlay Tunnels and SD-WAN Configurations",
							"item": [
								{
									"name": "5 - Add Overlay Tunnels for Hubs",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/vpnmgr/node\",\n            \"data\": [\n                {\n                \t\"id\": 100,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    },\n                    \"vpntable\": \"WAN_ID1\",\n                    \"role\": 0,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"net-device\": 0,\n                    \"tunnel-search\": 1,\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 0,\n                    \"dns-service\": \"default\",\n                    \"dhcp-server\": 0,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"assign-ip\": 1,\n                    \"assign-ip-from\": 0,\n                    \"dns-mode\": 1,\n                    \"peertype\": 1,\n                    \"unity-support\": 1,\n                    \"xauthtype\": 1\n                },\n\n                {\n                \t\"id\": 101,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    },\n                    \"vpntable\": \"WAN_ID2\",\n                    \"role\": 0,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"net-device\": 0,\n                    \"tunnel-search\": 1,\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 0,\n                    \"dns-service\": \"default\",\n                    \"dhcp-server\": 0,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"assign-ip\": 1,\n                    \"assign-ip-from\": 0,\n                    \"dns-mode\": 1,\n                    \"peertype\": 1,\n                    \"unity-support\": 1,\n                    \"xauthtype\": 1\n                },\n\n                {\n                \t\"id\": 102,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    },\n                    \"vpntable\": \"WAN_ID3\",\n                    \"role\": 0,\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"net-device\": 0,\n                    \"tunnel-search\": 1,\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 0,\n                    \"dns-service\": \"default\",\n                    \"dhcp-server\": 0,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"assign-ip\": 1,\n                    \"assign-ip-from\": 0,\n                    \"dns-mode\": 1,\n                    \"peertype\": 1,\n                    \"unity-support\": 1,\n                    \"xauthtype\": 1\n                }\n\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "6 - Assign to Hub 1 SD-WAN Template",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/1 - Hub 1 - Primary - SDWAN Template/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"{{Hub1_FGT_Name}}\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "4 - CLI Scripts",
							"item": [
								{
									"name": "7 - Add Script - Hub 1 - Device DB Configurations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"script_schedule\": null,\n                    \"name\": \"Step_1_Hub_1_Host_Configurations\",\n                    \"type\": \"cli\",\n                    \"desc\": \"\",\n                    \"content\": \"# BGP and Health Check Looopback Hub_1_ADVPN_&_BGP_Configuration\n\n# Interfaces\n\nconfig system interface\nedit \\\"HC_Loopback\\\"\nset vdom \\root\\\"\nset ip 10.200.99.1 255.255.255.255\nset allowaccess ping\nset type loopback\nset description \\\"Health Check Loopback\\\"\nset alias \\\"Health_Check_Loopback\\\"\nset role lan\nnext\nend\n\nconfig system interface\nedit \\\"WAN_ID1_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.1.250 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.1.254 255.255.255.0\nset interface wan1\nnext\nend\n\nconfig system interface\nedit \\\"WAN_ID2_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.2.250 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.2.254 255.255.255.0\nset interface wan1\nnext\nend\n\nconfig system interface\nedit \\\"WAN_ID3_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.3.250 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.3.254 255.255.255.0\nset interface wan2\nnext\nend\n\nconfig system interface\nedit \\\"Mgmt_H1N1_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan1\nnext\n\nedit \\\"Mgmt_H2N1_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan1\nnext\nend\n\n#Static Routes\n\nconfig router static\n\nedit 300\nset dst 10.20.100.0 255.255.255.0\nset distance 30\nset device \\\"Mgmt_H1N1_0\\\"\nnext\n\nedit 301\nset dst 10.20.200.0 255.255.255.0\nset distance 30\nset device \\\"Mgmt_H2N1_0\\\"\nnext\n\nedit 400\nset dst 10.20.100.0 255.255.255.0\nset distance 35\nset device \\\"Mgmt_H2N1_0\\\"\nnext\n\nedit 401\nset dst 10.20.200.0 255.255.255.0\nset distance 35\nset device \\\"Mgmt_H1N1_0\\\"\nnext\n\nend\n\n\nconfig system csf\nset status enable\nset group-name \\\"Pepsi_Fabric\\\"\nset management-ip \\\"63.64.106.66\\\"\nset fixed-key ********\nconfig trusted-list\nedit \\\"FGT60FTK19014085\\\"\nset serial \\\"FGT60FTK19014085\\\"\nnext\nedit \\\"FGT60FTK19012723\\\"\nset serial \\\"FGT60FTK19012723\\\"\nnext\nedit \\\"FGT60FTK19013915\\\"\nset serial \\\"FGT60FTK19013915\\\"\nnext\nedit \\\"FGT60FTK19013605\\\"\nset serial \\\"FGT60FTK19013605\\\"\nnext\nend\nend\n\n\",\n                    \"target\": \"device_database\"\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "8 - Excute Script - Hub 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"function waitOnTask(retries) {",
													"    if (!retries) {",
													"        pm.test(\"Task completed\", function() {",
													"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
													"        });",
													"        postman.setNextRequest(null);",
													"    }",
													"    else {",
													"        pm.sendRequest({",
													"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
													"            method: 'POST',",
													"            header: \"Content-Type:application/json\",",
													"            body: {",
													"                mode: 'raw',",
													"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
													"            }",
													"        }, function(err, response) {",
													"            var jsonData = response.json();",
													"            if (jsonData.result[0].data.percent == 100) {",
													"                // Task completed",
													"                if (jsonData.result[0].data.num_err) {",
													"                    postman.setNextRequest(null);",
													"                }",
													"                pm.test(\"Task completed\", function() {",
													"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
													"                });",
													"            }",
													"            else {",
													"                console.log(\"Task is still not complete\");",
													"                setTimeout(function() {",
													"                    waitOnTask(--retries);",
													"                }, 10000);",
													"            }",
													"        }); ",
													"    }",
													"}",
													"",
													"var jsonData = pm.response.json();",
													"var taskid = jsonData.result[0].data.task;",
													"",
													"waitOnTask(10);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"Step_1_Hub_1_Host_Configurations\",\n                \"scope\": [\n                    {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "5 - Metafields & Normalized Interfaces",
							"item": [
								{
									"name": "9 - Set Meta Fields for Hubs",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/device\",\n            \"data\": [\n                {\n                    \"name\": \"{{Hub1_FGT_Name}}\",\n                    \"meta fields\": {\n                        \"latitude\": \"0x4229A0FC\",\n                        \"longitude\": \"0xC28EC3CF\",\n                        \"hub-id\": \"1\",\n                        \"peer-dc-id\": \"2\"\n                    }\n                },\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.1 - Add Normalized Interfaces - WAN 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/wan1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"wan1\"\n                    ],\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.2 - Add Normalized Interfaces - WAN 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/wan2/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"wan2\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.3 - Add Normalized Interfaces - LAN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/LAN/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"port3\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.4 - Add Normalized Interfaces - Mgmt_Loopback",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_Loopback/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.5 - Add Normalized Interfaces - Mgmt_H1N1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_H1N1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_H1N1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.6 - Add Normalized Interfaces - Mgmt_H2N1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_H2N1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_H2N1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.7 - Add Normalized Interfaces - Overlay",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Overlay/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Overlay\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.8 - Add Normalized Interfaces - Underlay",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Underlay/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Underlay\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.9 - Add Normalized Interfaces - Internet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Internet/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Internet\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.10 - Add Normalized Interfaces - WAN_ID1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.10 - Add Normalized Interfaces - WAN_ID2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID2/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID2_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.10 - Add Normalized Interfaces - WAN_ID3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID3/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID3_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "6 - Assign Hub 1 to [hubs] Device Group",
							"item": [
								{
									"name": "7 -Assign Hub 1 to [hubs] Device Group",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/group/hubs/object member\",\n            \"data\": [\n                {\n                    \"name\": \"{{Hub1_FGT_Name}}\",\n                    \"vdom\": \"root\"\n                },\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "3.5 - Add Hub 1 to it's Policy Packages",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"update\",\n    \"params\": [\n        {\n            \"url\": \"/pm/pkg/adom/{{adom}}\",\n            \"data\": [\n                {\n                    \"name\": \"Hub1_Policy_Pkg\",\n                    \"scope member\": {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    },\n                    \"type\": \"pkg\"\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "7 - Initial Deployment - Policies, VPN tunnels, VPN ifaces",
							"item": [
								{
									"name": "7 - Install Policy - Hub 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"function waitOnTask(retries) {",
													"    if (!retries) {",
													"        pm.test(\"Task completed\", function() {",
													"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
													"        });",
													"        postman.setNextRequest(null);",
													"    }",
													"    else {",
													"        pm.sendRequest({",
													"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
													"            method: 'POST',",
													"            header: \"Content-Type:application/json\",",
													"            body: {",
													"                mode: 'raw',",
													"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
													"            }",
													"        }, function(err, response) {",
													"            var jsonData = response.json();",
													"            if (jsonData.result[0].data.percent == 100) {",
													"                // Task completed",
													"                if (jsonData.result[0].data.num_err) {",
													"                    postman.setNextRequest(null);",
													"                }",
													"                pm.test(\"Task completed\", function() {",
													"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
													"                });",
													"            }",
													"            else {",
													"                console.log(\"Task is still not complete\");",
													"                setTimeout(function() {",
													"                    waitOnTask(--retries);",
													"                }, 50000);",
													"            }",
													"        }); ",
													"    }",
													"}",
													"",
													"var jsonData = pm.response.json();",
													"var taskid = jsonData.result[0].data.task;",
													"",
													"waitOnTask(10);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/package\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"pkg\": \"Hub1_Policy_Pkg\",\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "8 - 2nd Push - BGP configurations / Final",
							"item": [
								{
									"name": "8 - Add Script - Hub 1 - BGP & Loopback",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"script_schedule\": null,\n                    \"name\": \"Step_2_Hub_1_ADVPN_&_BGP_Configuration\",\n                    \"type\": \"cli\",\n                    \"desc\": \"\",\n                    \"content\": \"# BGP and Health Check Looopback Hub_1_ADVPN_&_BGP_Configuration\n\n#Static Routes\n\nconfig vpn ipsec phase1-interface\n    edit \\\"WAN_ID1_0\\\"\n        set auto-discovery-sender enable\n    next\n    edit \\\"WAN_ID2_0\\\"\n        set auto-discovery-sender enable\n    next\n    edit \\\"WAN_ID3_0\\\"\n        set auto-discovery-sender enable\n    next\nend\n\n\n\nconfig router community-list\n    edit \\\"Routes_from_PIP\\\"\n        config rule\n            edit 10\n                set action permit\n                set match \\\"7604:0\\\"\n            next\n        end\n    next\n    edit \\\"Routes_from_Overlay\\\"\n        config rule\n            edit 10\n                set action permit\n                set match \\\"1331:0\\\"\n            next\n        end\n    next\nend\n\n#\n#\n#\n\nconfig router prefix-list\n    edit \\\"BGP_with_PE\\\"\n        config rule\n            edit 1\n                set prefix {{Hub1_FGT_IP}} 255.255.255.255\n            next\n        end\n    next\n    edit \\\"Routes_from_PE\\\"\n        config rule\n            edit 1\n                set prefix 10.50.0.0 255.255.0.0\n            next\n            edit 2\n                set prefix 10.20.100.0 255.255.255.0\n            next\n            edit 3\n                set prefix 10.20.200.0 255.255.255.0\n            next\n            edit 4\n                set prefix 159.24.76.144 255.255.255.240\n            next\n            edit 5\n                set prefix 205.223.104.0 255.255.255.0\n            next\n            edit 6\n                set prefix 205.223.105.0 255.255.255.0\n            next\n            edit 7\n                set prefix 159.24.76.176 255.255.255.240\n            next\n            edit 8\n                set prefix 153.39.115.20 255.255.255.255\n            next\n            edit 9\n                set prefix 206.64.200.122 255.255.255.255\n            next\n            edit 10\n                set prefix 192.168.209.24 255.255.255.252\n            next\n            edit 11\n                set prefix 192.168.209.28 255.255.255.252\n            next\n            edit 12\n                set prefix 192.168.216.0 255.255.255.240\n            next\n            edit 13\n                set prefix 192.168.216.216 255.255.255.248\n            next\n            edit 14\n                set prefix 192.168.254.128 255.255.255.252\n            next\n            edit 15\n                set prefix 192.168.254.132 255.255.255.252\n            next\n            edit 16\n                set prefix 192.168.254.140 255.255.255.252\n            next\n            edit 17\n                set prefix 192.168.254.136 255.255.255.252\n            next\n        end\n    next\n    edit \\\"Routes_to_Spokes\\\"\n        config rule\n            edit 1\n                set prefix 10.50.0.0 255.255.0.0\n                set ge 24\n                set le 24\n            next\n        end\n    next\n    edit \\\"Routes_from_Spokes\\\"\n        config rule\n            edit 1\n                set prefix 10.50.0.0 255.255.0.0\n                set ge 24\n                set le 24\n            next\n        end\n    next\nend\n\n#\n#\n#\n\nconfig router route-map\n    edit \\\"BGP_with_PE\\\"\n        config rule\n            edit 1\n                set match-community \\\"Routes_from_Overlay\\\"\n            next\n            edit 2\n                set match-ip-address \\\"BGP_with_PE\\\"\n            next\n        end\n    next\n    edit \\\"Routes_From_PE\\\"\n        config rule\n            edit 1\n                set match-ip-address \\\"Routes_from_PE\\\"\n                set set-community \\\"701:0\\\"\n                set set-local-preference 50\n            next\n        end\n    next\n    edit \\\"Routes_from_Spokes\\\"\n        config rule\n            edit 1\n                set match-community \\\"Routes_from_Overlay\\\"\n                set match-ip-address \\\"Routes_from_Spokes\\\"\n            next\n        end\n    next\n    edit \\\"Routes_to_Spokes\\\"\n        config rule\n            edit 1\n                set action deny\n                set match-community \\\"Routes_from_PIP\\\"\n            next\n            edit 2\n                set set-community \\\"1331:0\\\"\n                set match-ip-address \\\"Routes_to_Spokes\\\"\n            next\n        end\n    next\nend\n\n#\n#\n#\n\nconfig router bgp\n    set as 1331\n    set keepalive-timer 5\n    set holdtime-timer 15\n    set ibgp-multipath enable\n    config neighbor\n        edit \\\"{{Hub1_BGP_Neighbor_IP}}\\\"\n            set soft-reconfiguration enable\n            set remote-as 701\n            set local-as 7046\n            set local-as-replace-as enable\n            set route-map-in \\\"Routes_From_PE\\\"\n            set route-map-out \\\"BGP_with_PE\\\"\n        next\n    end\n    config neighbor-group\n        edit \\\"WAN_Spokes_ID1\\\"\n            set advertisement-interval 1\n            set link-down-failover enable\n            set next-hop-self enable\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in \\\"Routes_from_Spokes\\\"\n            set route-map-out \\\"Routes_to_Spokes\\\"\n            set update-source \\\"WAN_ID1_0\\\"\n            set route-reflector-client enable\n        next\n        edit \\\"WAN_Spokes_ID2\\\"\n            set advertisement-interval 1\n            set link-down-failover enable\n            set next-hop-self enable\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in \\\"Routes_from_Spokes\\\"\n            set route-map-out \\\"Routes_to_Spokes\\\"\n            set update-source \\\"WAN_ID2_0\\\"\n            set route-reflector-client enable\n        next\n        edit \\\"WAN_Spokes_ID3\\\"\n            set advertisement-interval 1\n            set link-down-failover enable\n            set next-hop-self enable\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in \\\"Routes_from_Spokes\\\"\n            set route-map-out \\\"Routes_to_Spokes\\\"\n            set update-source \\\"WAN_ID3_0\\\"\n            set route-reflector-client enable\n        next\n    end\n    config neighbor-range\n        edit 1\n            set prefix 10.10.1.0 255.255.255.0\n            set neighbor-group \\\"WAN_Spokes_ID1\\\"\n        next\n        edit 2\n            set prefix 10.10.2.0 255.255.255.0\n            set neighbor-group \\\"WAN_Spokes_ID2\\\"\n        next\n        edit 3\n            set prefix 10.10.3.0 255.255.255.0\n            set neighbor-group \\\"WAN_Spokes_ID3\\\"\n        next\n    end\n    config network\n        edit 1\n            set prefix {{Hub1_FGT_LAN}}\n        next\n        edit 2\n            set prefix {{Hub1_FGT_IP}} 255.255.255.255\n        next\n    end\nend\n\n\nconfig router policy\n    edit 1\n        set input-device \\\"WAN_ID1_0\\\" \\\"WAN_ID2_0\\\"\n        set srcaddr \\\"all\\\"\n        set srcaddr \\\"all\\\"\n        set output-device \\\"WAN_ID1_0\\\"\n    next\n    edit 2\n        set input-device \\\"WAN_ID1_0\\\" \\\"WAN_ID2_0\\\"\n        set srcaddr \\\"all\\\"\n        set srcaddr \\\"all\\\"\n        set output-device \\\"WAN_ID2_0\\\"\n    next\n    edit 3\n        set input-device \\\"WAN_ID3_0\\\"\n        set srcaddr \\\"all\\\"\n        set srcaddr \\\"all\\\"\n        set output-device \\\"WAN_ID3_0\\\"\n    next\nend\n\",\n                    \"target\": \"device_database\"\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9 - Run Script - Hub 1 - BGP & Loopback",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"function waitOnTask(retries) {",
													"    if (!retries) {",
													"        pm.test(\"Task completed\", function() {",
													"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
													"        });",
													"        postman.setNextRequest(null);",
													"    }",
													"    else {",
													"        pm.sendRequest({",
													"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
													"            method: 'POST',",
													"            header: \"Content-Type:application/json\",",
													"            body: {",
													"                mode: 'raw',",
													"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
													"            }",
													"        }, function(err, response) {",
													"            var jsonData = response.json();",
													"            if (jsonData.result[0].data.percent == 100) {",
													"                // Task completed",
													"                if (jsonData.result[0].data.num_err) {",
													"                    postman.setNextRequest(null);",
													"                }",
													"                pm.test(\"Task completed\", function() {",
													"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
													"                });",
													"            }",
													"            else {",
													"                console.log(\"Task is still not complete\");",
													"                setTimeout(function() {",
													"                    waitOnTask(--retries);",
													"                }, 10000);",
													"            }",
													"        }); ",
													"    }",
													"}",
													"",
													"var jsonData = pm.response.json();",
													"var taskid = jsonData.result[0].data.task;",
													"",
													"waitOnTask(10);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"Step_2_Hub_1_ADVPN_&_BGP_Configuration\",\n                \"scope\": [\n                    {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "12 - Install Configuration - Hub 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"function waitOnTask(retries) {",
													"    if (!retries) {",
													"        pm.test(\"Task completed\", function() {",
													"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
													"        });",
													"        postman.setNextRequest(null);",
													"    }",
													"    else {",
													"        pm.sendRequest({",
													"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
													"            method: 'POST',",
													"            header: \"Content-Type:application/json\",",
													"            body: {",
													"                mode: 'raw',",
													"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
													"            }",
													"        }, function(err, response) {",
													"            var jsonData = response.json();",
													"            if (jsonData.result[0].data.percent == 100) {",
													"                // Task completed",
													"                if (jsonData.result[0].data.num_err) {",
													"                    postman.setNextRequest(null);",
													"                }",
													"                pm.test(\"Task completed\", function() {",
													"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
													"                });",
													"            }",
													"            else {",
													"                console.log(\"Task is still not complete\");",
													"                setTimeout(function() {",
													"                    waitOnTask(--retries);",
													"                }, 10000);",
													"            }",
													"        }); ",
													"    }",
													"}",
													"",
													"var jsonData = pm.response.json();",
													"var taskid = jsonData.result[0].data.task;",
													"",
													"waitOnTask(10);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/device\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        },\n                    ],\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "8 - Add Script - Hub 1 - BGP & Loopback Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"get\",\n    \"params\": [\n        {\n            \"url\": \"/cli/global/system/soc-fabric\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Hub 2 - Complete Configurations",
					"item": [
						{
							"name": "1 - Onboarding",
							"item": [
								{
									"name": "2 - Discover Hub 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"sn = jsonData.result[0].data.device.sn;",
													"hostname = jsonData.result[0].data.device.name;",
													"",
													"pm.environment.set(\"Hub2_FGT_SN\", sn);",
													"pm.environment.set(\"Hub2_FGT_Name\", hostname);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvm/cmd/discover/device\",\n            \"data\": {\n                \"device\": {\n                    \"adm_pass\": \"{{password}}\",\n                    \"adm_usr\": \"{{username}}\",\n                    \"ip\": \"{{Hub2_FGT_IP}}\"\n                }\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "2.1 - Add Hub 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"function waitOnTask(retries) {",
													"    if (!retries) {",
													"        pm.test(\"Task completed\", function() {",
													"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
													"        });",
													"        postman.setNextRequest(null);",
													"    }",
													"    else {",
													"        pm.sendRequest({",
													"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
													"            method: 'POST',",
													"            header: \"Content-Type:application/json\",",
													"            body: {",
													"                mode: 'raw',",
													"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
													"            }",
													"        }, function(err, response) {",
													"            var jsonData = response.json();",
													"            if (jsonData.result[0].data.percent == 100) {",
													"                // Task completed",
													"                if (jsonData.result[0].data.num_err) {",
													"                    postman.setNextRequest(null);",
													"                }",
													"                pm.test(\"Task completed\", function() {",
													"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
													"                });",
													"            }",
													"            else {",
													"                console.log(\"Task is still not complete\");",
													"                setTimeout(function() {",
													"                    waitOnTask(--retries);",
													"                }, 10000);",
													"            }",
													"        }); ",
													"    }",
													"}",
													"",
													"var jsonData = pm.response.json();",
													"var taskid = jsonData.result[0].data.taskid;",
													"",
													"waitOnTask(10);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvm/cmd/add/dev-list\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"flags\": [\"create_task\", \"nonblocking\"],\n                \"add-dev-list\": [\n                    {\n\t                    \"adm_pass\": \"{{password}}\",\n\t                    \"adm_usr\": \"{{username}}\",\n                        \"ip\": \"{{Hub2_FGT_IP}}\",\n                        \"name\": \"{{Hub2_FGT_Name}}\",\n                        \"sn\": \"{{Hub2_FGT_SN}}\",\n                        \"mgmt_mode\": \"fmgfaz\",\n                        \"flags\": 24\n                    },\n\n                ]\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "2 - Hub 2 Dynamic Addresses",
							"item": [
								{
									"name": "2.3 - Add Mgmt_Loopback Address Objects for Hub 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/firewall/address/Mgmt_Loopback/dynamic_mapping\",\n            \"data\": \n                    {\n                    \"_scope\": [\n                        {\n                        \"name\": \"{{Hub2_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                        }\n                    ],\n                    \"associated-interface\": \"Mgmt_Loopback\",\n                    \"subnet\": \"{{Hub2_FGT_IP}} 255.255.255.255\"\n                    }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc?Mgmt_Loopback=208.230.128.200 255.255.255.255",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											],
											"query": [
												{
													"key": "Mgmt_Loopback",
													"value": "208.230.128.200 255.255.255.255"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.4 - Add LAN Address Objects for Hub 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/firewall/address/LAN/dynamic_mapping\",\n            \"data\": \n                    {\n                    \"_scope\": [\n                        {\n                        \"name\": \"{{Hub2_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                        }\n                    ],\n                    \"subnet\": \"{{Hub2_FGT_LAN}}\"\n                    }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc?Mgmt_Loopback=208.230.128.200 255.255.255.255",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											],
											"query": [
												{
													"key": "Mgmt_Loopback",
													"value": "208.230.128.200 255.255.255.255"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "3 - Overlay tunnels and SD-WAN Configurations",
							"item": [
								{
									"name": "5 - Add Overlay Tunnels for Hub 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/vpnmgr/node\",\n            \"data\": [\n\n                {\n                \t\"id\": 103,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"{{Hub2_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    },\n                    \"vpntable\": \"WAN_ID4\",\n                    \"role\": 0,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"net-device\": 0,\n                    \"tunnel-search\": 1,\n                    \"vpn-interface-priority\": 0,\n                     \"auto-configuration\": 0,\n                    \"dns-service\": \"default\",\n                    \"dhcp-server\": 0,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"assign-ip\": 1,\n                    \"assign-ip-from\": 0,\n                    \"dns-mode\": 1,\n                    \"peertype\": 1,\n                    \"unity-support\": 1,\n                    \"xauthtype\": 1\n                },\n\n                {\n                \t\"id\": 104,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"{{Hub2_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    },\n                    \"vpntable\": \"WAN_ID5\",\n                    \"role\": 0,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"net-device\": 0,\n                    \"tunnel-search\": 1,\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 0,\n                    \"dns-service\": \"default\",\n                    \"dhcp-server\": 0,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"assign-ip\": 1,\n                    \"assign-ip-from\": 0,\n                    \"dns-mode\": 1,\n                    \"peertype\": 1,\n                    \"unity-support\": 1,\n                    \"xauthtype\": 1\n                },\n\n                {\n                \t\"id\": 105,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"{{Hub2_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    },\n                    \"vpntable\": \"WAN_ID6\",\n                    \"role\": 0,\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"net-device\": 0,\n                    \"tunnel-search\": 1,\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 0,\n                    \"dns-service\": \"default\",\n                    \"dhcp-server\": 0,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"assign-ip\": 1,\n                    \"assign-ip-from\": 0,\n                    \"dns-mode\": 1,\n                    \"peertype\": 1,\n                    \"unity-support\": 1,\n                    \"xauthtype\": 1\n                }\n\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "1 - Assign to Hub 2 SD-WAN Template",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/2 - Hub 2 - Secondary - SDWAN Template/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"{{Hub2_FGT_Name}}\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "4 - CLI Scripts",
							"item": [
								{
									"name": "7 - Add Script - Hub 2 - Device DB Configurations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"script_schedule\": null,\n                    \"name\": \"Step_1_Hub_2_Host_Configurations\",\n                    \"type\": \"cli\",\n                    \"desc\": \"\",\n                    \"content\": \"# BGP and Health Check Looopback Hub_2_ADVPN_&_BGP_Configuration\n\n\n\n\n# Interfaces\n\nconfig system interface\nedit \\\"HC_Loopback\\\"\nset vdom \\root\\\"\nset ip 10.200.99.1 255.255.255.255\nset allowaccess ping\nset type loopback\nset description \\\"Health Check Loopback\\\"\nset alias \\\"Health_Check_Loopback\\\"\nset role lan\nnext\nend\n\nconfig system interface\nedit \\\"WAN_ID4_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.4.250 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.4.254 255.255.255.0\nset interface wan1\nnext\nend\n\nconfig system interface\nedit \\\"WAN_ID5_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.5.250 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.5.254 255.255.255.0\nset interface wan1\nnext\nend\n\nconfig system interface\nedit \\\"WAN_ID6_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.6.250 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.6.254 255.255.255.0\nset interface wan2\nnext\nend\n\nconfig system interface\nedit \\\"Mgmt_H1N1_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan1\nnext\n\nedit \\\"Mgmt_H2N1_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan1\nnext\nend\n\n#Static Routes\n\nconfig router static\n\nedit 300\nset dst 10.20.100.0 255.255.255.0\nset distance 30\nset device \\\"Mgmt_H1N1_0\\\"\nnext\n\nedit 301\nset dst 10.20.200.0 255.255.255.0\nset distance 30\nset device \\\"Mgmt_H2N1_0\\\"\nnext\n\nedit 400\nset dst 10.20.100.0 255.255.255.0\nset distance 35\nset device \\\"Mgmt_H2N1_0\\\"\nnext\n\nedit 401\nset dst 10.20.200.0 255.255.255.0\nset distance 35\nset device \\\"Mgmt_H1N1_0\\\"\nnext\n\nend\n\n\",\n                    \"target\": \"device_database\"\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "8 - Excute Script - Hub 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"function waitOnTask(retries) {",
													"    if (!retries) {",
													"        pm.test(\"Task completed\", function() {",
													"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
													"        });",
													"        postman.setNextRequest(null);",
													"    }",
													"    else {",
													"        pm.sendRequest({",
													"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
													"            method: 'POST',",
													"            header: \"Content-Type:application/json\",",
													"            body: {",
													"                mode: 'raw',",
													"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
													"            }",
													"        }, function(err, response) {",
													"            var jsonData = response.json();",
													"            if (jsonData.result[0].data.percent == 100) {",
													"                // Task completed",
													"                if (jsonData.result[0].data.num_err) {",
													"                    postman.setNextRequest(null);",
													"                }",
													"                pm.test(\"Task completed\", function() {",
													"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
													"                });",
													"            }",
													"            else {",
													"                console.log(\"Task is still not complete\");",
													"                setTimeout(function() {",
													"                    waitOnTask(--retries);",
													"                }, 10000);",
													"            }",
													"        }); ",
													"    }",
													"}",
													"",
													"var jsonData = pm.response.json();",
													"var taskid = jsonData.result[0].data.task;",
													"",
													"waitOnTask(10);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"Step_1_Hub_2_Host_Configurations\",\n                \"scope\": [\n                    {\n                        \"name\": \"{{Hub2_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "5 - Metafields & Normalized Interfaces",
							"item": [
								{
									"name": "6 - Set Meta Fields for Hubs",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/device\",\n            \"data\": [\n                {\n                    \"name\": \"{{Hub2_FGT_Name}}\",\n                    \"meta fields\": {\n                        \"latitude\": \"34.052235\",\n                        \"longitude\": \"-118.243683\",\n                        \"hub-id\": \"2\",\n                        \"peer-dc-id\": \"1\"\n                    }\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "8 - Add Normalized Interfaces - WAN 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/wan1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub2_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"wan1\"\n                    ],\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "8 - Add Normalized Interfaces - WAN 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/wan2/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub2_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"wan2\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "8 - Add Normalized Interfaces - LAN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/LAN/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub2_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"port3\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9 - Add Normalized Interfaces - Mgmt_Loopback",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_Loopback/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub2_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.5 - Add Normalized Interfaces - Mgmt_H1N1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_H1N1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub2_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_H1N1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.6 - Add Normalized Interfaces - Mgmt_H2N1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_H2N1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub2_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_H2N1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.7 - Add Normalized Interfaces - Overlay",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Overlay/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub2_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Overlay\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.8 - Add Normalized Interfaces - Underlay",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Underlay/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub2_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Underlay\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.9 - Add Normalized Interfaces - Internet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Internet/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub2_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Internet\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.10 - Add Normalized Interfaces - WAN_ID4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID4/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub2_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID4_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.10 - Add Normalized Interfaces - WAN_ID5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID5/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub2_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID5_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "9.10 - Add Normalized Interfaces - WAN_ID6",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID6/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub2_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID6_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "6 - Assign Hub 2 to [hubs] Device Group & Policy Package",
							"item": [
								{
									"name": "3 -Assign Hub 2 to [hubs] Device Group",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/group/hubs/object member\",\n            \"data\": [\n                {\n                    \"name\": \"{{Hub2_FGT_Name}}\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "3.5 - Add Hub 2 to it's Policy Packages",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"update\",\n    \"params\": [\n        {\n            \"url\": \"/pm/pkg/adom/{{adom}}\",\n            \"data\": [\n                {\n                    \"name\": \"Hub2_Policy_Pkg\",\n                    \"scope member\": {\n                        \"name\": \"{{Hub2_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    },\n                    \"type\": \"pkg\"\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "7 - Initial Deployment - Policies, VPN tunnels, VPN ifaces",
							"item": [
								{
									"name": "10 - Install Policy - Hub 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"function waitOnTask(retries) {",
													"    if (!retries) {",
													"        pm.test(\"Task completed\", function() {",
													"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
													"        });",
													"        postman.setNextRequest(null);",
													"    }",
													"    else {",
													"        pm.sendRequest({",
													"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
													"            method: 'POST',",
													"            header: \"Content-Type:application/json\",",
													"            body: {",
													"                mode: 'raw',",
													"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
													"            }",
													"        }, function(err, response) {",
													"            var jsonData = response.json();",
													"            if (jsonData.result[0].data.percent == 100) {",
													"                // Task completed",
													"                if (jsonData.result[0].data.num_err) {",
													"                    postman.setNextRequest(null);",
													"                }",
													"                pm.test(\"Task completed\", function() {",
													"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
													"                });",
													"            }",
													"            else {",
													"                console.log(\"Task is still not complete\");",
													"                setTimeout(function() {",
													"                    waitOnTask(--retries);",
													"                }, 50000);",
													"            }",
													"        }); ",
													"    }",
													"}",
													"",
													"var jsonData = pm.response.json();",
													"var taskid = jsonData.result[0].data.task;",
													"",
													"waitOnTask(10);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/package\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"pkg\": \"Hub2_Policy_Pkg\",\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "8 - 2nd Push - BGP configurations / Final",
							"item": [
								{
									"name": "12 - Add Script - Hub 2 - ADVPN & BGP",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"script_schedule\": null,\n                    \"name\": \"Hub_2_ADVPN_&_BGP_Configuration\",\n                    \"type\": \"cli\",\n                    \"desc\": \"\",\n                    \"content\": \"# BGP and Health Check Looopback Hub_1_ADVPN_&_BGP_Configuration\n\nconfig system interface\n  edit \\\"HC_Loopback\\\"\n    set vdom \\\"root\\\"\n    set ip 10.200.99.1 255.255.255.255\n    set allowaccess ping\n    set type loopback\n  next\nend\n\nconfig router community-list\n    edit \\\"Routes_from_PIP\\\"\n        config rule\n            edit 10\n                set action permit\n                set match \\\"7604:0\\\"\n            next\n        end\n    next\n    edit \\\"Routes_from_Overlay\\\"\n        config rule\n            edit 10\n                set action permit\n                set match \\\"1331:0\\\"\n            next\n        end\n    next\nend\n\n#\n#\n#\n\nconfig router prefix-list\n    edit \\\"BGP_with_PE\\\"\n        config rule\n            edit 1\n                set prefix {{Hub2_FGT_IP}} 255.255.255.255\n                unset ge\n                unset le\n            next\n        end\n    next\n    edit \\\"Routes_from_PE\\\"\n        config rule\n            edit 1\n                set prefix 10.50.0.0 255.255.0.0\n            next\n            edit 2\n                set prefix 10.20.100.0 255.255.255.0\n            next\n            edit 3\n                set prefix 10.20.200.0 255.255.255.0\n            next\n            edit 4\n                set prefix 159.24.76.144 255.255.255.240\n            next\n            edit 5\n                set prefix 205.223.104.0 255.255.255.0\n            next\n            edit 6\n                set prefix 205.223.105.0 255.255.255.0\n            next\n            edit 7\n                set prefix 159.24.76.176 255.255.255.240\n            next\n            edit 8\n                set prefix 153.39.115.20 255.255.255.255\n            next\n            edit 9\n                set prefix 206.64.200.122 255.255.255.255\n            next\n            edit 10\n                set prefix 192.168.209.24 255.255.255.252\n            next\n            edit 11\n                set prefix 192.168.209.28 255.255.255.252\n            next\n            edit 12\n                set prefix 192.168.216.0 255.255.255.240\n            next\n            edit 13\n                set prefix 192.168.216.216 255.255.255.248\n            next\n            edit 14\n                set prefix 192.168.254.128 255.255.255.252\n            next\n            edit 15\n                set prefix 192.168.254.132 255.255.255.252\n            next\n            edit 16\n                set prefix 192.168.254.140 255.255.255.252\n            next\n            edit 17\n                set prefix 192.168.254.136 255.255.255.252\n            next\n        end\n    next\n    edit \\\"Routes_to_Spokes\\\"\n        config rule\n            edit 1\n                set prefix 10.50.0.0 255.255.0.0\n                set ge 24\n                set le 24\n            next\n        end\n    next\n    edit \\\"Routes_from_Spokes\\\"\n        config rule\n            edit 1\n                set prefix 10.50.0.0 255.255.0.0\n                set ge 24\n                set le 24\n            next\n        end\nend\n\n#\n#\n#\n\nconfig router route-map\n    edit \\\"BGP_with_PE\\\"\n        config rule\n            edit 1\n                set match-community \\\"Routes_from_Overlay\\\"\n            next\n            edit 2\n                set match-ip-address \\\"BGP_with_PE\\\"\n            next\n        end\n    next\n    edit \\\"Routes_From_PE\\\"\n        config rule\n            edit 1\n                set match-ip-address \\\"Routes_from_PE\\\"\n                set set-community \\\"701:0\\\"\n                set set-local-preference 50\n            next\n        end\n    next\n    edit \\\"Routes_from_Spokes\\\"\n        config rule\n            edit 1\n                set match-community \\\"Routes_from_Overlay\\\"\n                set match-ip-address \\\"Routes_from_Spokes\\\"\n            next\n        end\n    next\n    edit \\\"Routes_to_Spokes\\\"\n        config rule\n            edit 1\n                set action deny\n                set match-community \\\"Routes_from_PIP\\\"\n            next\n            edit 2\n                set set-community \\\"1331:0\\\"\n                set match-ip-address \\\"Routes_to_Spokes\\\"\n            next\n        end\n    next\nend\n\n#\n#\n#\n\nconfig router bgp\n    set as 1331\n    set keepalive-timer 5\n    set holdtime-timer 15\n    set ibgp-multipath enable\n    config neighbor\n        edit \\\"{{Hub2_BGP_Neighbor_IP}}\\\"\n            set soft-reconfiguration enable\n            set remote-as 701\n            set local-as 7046\n            set local-as-replace-as enable\n            set route-map-in \\\"Routes_From_PE\\\"\n            set route-map-out \\\"BGP_with_PE\\\"\n        next\n    end\n    config neighbor-group\n        edit \\\"WAN_Spokes_ID4\\\"\n            set advertisement-interval 1\n            set link-down-failover enable\n            set next-hop-self enable\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in \\\"Routes_from_Spokes\\\"\n            set route-map-out \\\"Routes_to_Spokes\\\"\n            set update-source \\\"WAN_ID4_0\\\"\n            set route-reflector-client enable\n        next\n        edit \\\"WAN_Spokes_ID5\\\"\n            set advertisement-interval 1\n            set link-down-failover enable\n            set next-hop-self enable\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in \\\"Routes_from_Spokes\\\"\n            set route-map-out \\\"Routes_to_Spokes\\\"\n            set update-source \\\"WAN_ID5_0\\\"\n            set route-reflector-client enable\n        next\n        edit \\\"WAN_Spokes_ID6\\\"\n            set advertisement-interval 1\n            set link-down-failover enable\n            set next-hop-self enable\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in \\\"Routes_from_Spokes\\\"\n            set route-map-out \\\"Routes_to_Spokes\\\"\n            set update-source \\\"WAN_ID6_0\\\"\n            set route-reflector-client enable\n        next\n    end\n    config neighbor-range\n        edit 1\n            set prefix 10.10.4.0 255.255.255.0\n            set neighbor-group \\\"WAN_Spokes_ID4\\\"\n        next\n        edit 2\n            set prefix 10.10.5.0 255.255.255.0\n            set neighbor-group \\\"WAN_Spokes_ID5\\\"\n        next\n        edit 3\n            set prefix 10.10.6.0 255.255.255.0\n            set neighbor-group \\\"WAN_Spokes_ID6\\\"\n        next\n    end\n    config network\n        edit 1\n            set prefix {{Hub2_FGT_LAN}}\n        next\n        edit 2\n            set prefix {{Hub2_FGT_IP}} 255.255.255.255\n        next\n    end\nend\n\",\n                    \"target\": \"device_database\"\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "14 - Run Script - Hub 2 - ADVPN & BGP",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"function waitOnTask(retries) {",
													"    if (!retries) {",
													"        pm.test(\"Task completed\", function() {",
													"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
													"        });",
													"        postman.setNextRequest(null);",
													"    }",
													"    else {",
													"        pm.sendRequest({",
													"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
													"            method: 'POST',",
													"            header: \"Content-Type:application/json\",",
													"            body: {",
													"                mode: 'raw',",
													"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
													"            }",
													"        }, function(err, response) {",
													"            var jsonData = response.json();",
													"            if (jsonData.result[0].data.percent == 100) {",
													"                // Task completed",
													"                if (jsonData.result[0].data.num_err) {",
													"                    postman.setNextRequest(null);",
													"                }",
													"                pm.test(\"Task completed\", function() {",
													"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
													"                });",
													"            }",
													"            else {",
													"                console.log(\"Task is still not complete\");",
													"                setTimeout(function() {",
													"                    waitOnTask(--retries);",
													"                }, 10000);",
													"            }",
													"        }); ",
													"    }",
													"}",
													"",
													"var jsonData = pm.response.json();",
													"var taskid = jsonData.result[0].data.task;",
													"",
													"waitOnTask(10);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"Hub_2_ADVPN_&_BGP_Configuration\",\n                \"scope\": [\n                    {\n                        \"name\": \"{{Hub2_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								},
								{
									"name": "15 - Install Configuration - Hub 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"function waitOnTask(retries) {",
													"    if (!retries) {",
													"        pm.test(\"Task completed\", function() {",
													"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
													"        });",
													"        postman.setNextRequest(null);",
													"    }",
													"    else {",
													"        pm.sendRequest({",
													"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
													"            method: 'POST',",
													"            header: \"Content-Type:application/json\",",
													"            body: {",
													"                mode: 'raw',",
													"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
													"            }",
													"        }, function(err, response) {",
													"            var jsonData = response.json();",
													"            if (jsonData.result[0].data.percent == 100) {",
													"                // Task completed",
													"                if (jsonData.result[0].data.num_err) {",
													"                    postman.setNextRequest(null);",
													"                }",
													"                pm.test(\"Task completed\", function() {",
													"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
													"                });",
													"            }",
													"            else {",
													"                console.log(\"Task is still not complete\");",
													"                setTimeout(function() {",
													"                    waitOnTask(--retries);",
													"                }, 10000);",
													"            }",
													"        }); ",
													"    }",
													"}",
													"",
													"var jsonData = pm.response.json();",
													"var taskid = jsonData.result[0].data.task;",
													"",
													"waitOnTask(10);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/device\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"scope\": [\n                        {\n                            \"name\": \"{{Hub2_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "https://{{ip}}/jsonrpc",
											"protocol": "https",
											"host": [
												"{{ip}}"
											],
											"path": [
												"jsonrpc"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Dual Broadband Sites [No LTE] - Day 1 Configurations",
			"item": [
				{
					"name": "1 - Discover Spoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"sn = jsonData.result[0].data.device.sn;",
									"hostname = jsonData.result[0].data.device.name;",
									"",
									"pm.environment.set(\"Spoke_FGT_SN\", sn);",
									"pm.environment.set(\"Spoke_FGT_Name\", hostname);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvm/cmd/discover/device\",\n            \"data\": {\n                \"device\": {\n                    \"adm_pass\": \"{{password}}\",\n                    \"adm_usr\": \"{{username}}\",\n                    \"ip\": \"{{Spoke_MGMT_LB_IP}}\"\n                }\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - Add Spoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function waitOnTask(retries) {",
									"    if (!retries) {",
									"        pm.test(\"Task completed\", function() {",
									"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
									"        });",
									"        postman.setNextRequest(null);",
									"    }",
									"    else {",
									"        pm.sendRequest({",
									"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"            method: 'POST',",
									"            header: \"Content-Type:application/json\",",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
									"            }",
									"        }, function(err, response) {",
									"            var jsonData = response.json();",
									"            if (jsonData.result[0].data.percent == 100) {",
									"                // Task completed",
									"                if (jsonData.result[0].data.num_err) {",
									"                    postman.setNextRequest(null);",
									"                }",
									"                pm.test(\"Task completed\", function() {",
									"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
									"                });",
									"            }",
									"            else {",
									"                console.log(\"Task is still not complete\");",
									"                setTimeout(function() {",
									"                    waitOnTask(--retries);",
									"                }, 10000);",
									"            }",
									"        }); ",
									"    }",
									"}",
									"",
									"var jsonData = pm.response.json();",
									"var taskid = jsonData.result[0].data.taskid;",
									"",
									"waitOnTask(10);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvm/cmd/add/dev-list\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"flags\": [\"create_task\", \"nonblocking\"],\n                \"add-dev-list\": [\n                    {\n\t                    \"adm_pass\": \"{{password}}\",\n\t                    \"adm_usr\": \"{{username}}\",\n                        \"ip\": \"{{Spoke_MGMT_LB_IP}}\",\n                        \"name\": \"{{Spoke_FGT_Name}}\",\n                        \"sn\": \"{{Spoke_FGT_SN}}\",\n                        \"mgmt_mode\": \"fmgfaz\",\n                        \"flags\": 24\n                    },\n\n                ]\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 - Add Mgmt_Loopback Dynamic Address Objects for Hub 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/firewall/address/Mgmt_Loopback/dynamic_mapping\",\n            \"data\": \n                    {\n                    \"_scope\": [\n                        {\n                        \"name\": \"{{Spoke_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                        }\n                    ],\n                    \"associated-interface\": \"Mgmt_Loopback\",\n                    \"subnet\": \"{{Spoke_MGMT_LB_IP}} 255.255.255.255\"\n                    }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 - Add LAN Dynamic Address Objects for Spoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/firewall/address/LAN/dynamic_mapping\",\n            \"data\": \n                    {\n                    \"_scope\": [\n                        {\n                        \"name\": \"{{Spoke_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                        }\n                    ],\n                    \"subnet\": \"{{Spoke_LAN}}\"\n                    }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 -Assign Spoke to [dual-broadband] Device Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/group/dual-broadband/object member\",\n            \"data\": [\n                {\n                    \"name\": \"{{Spoke_FGT_Name}}\",\n                    \"vdom\": \"root\"\n                },\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 - Assign FGT to SD-WAN Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/4 - Dual Broadband - WAN 1 & WAN 2/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"{{Spoke_FGT_Name}}\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "7 - Add Script - Dual Broadband - Device DB Configurations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"script_schedule\": null,\n                    \"name\": \"Dual_Broadband_Step_1_Host_Configurations\",\n                    \"type\": \"cli\",\n                    \"desc\": \"\",\n                    \"content\": \"# VPN IFaces, Dynamic Interfaces and static routes\n\n# Interfaces\n\nconfig system interface\nedit \\\"WAN_ID1_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.1.{{Spoke_number}} 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.1.250 255.255.255.0\nset interface wan1\nnext\n\nedit \\\"WAN_ID2_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.2.{{Spoke_number}} 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.2.250 255.255.255.0\nset interface wan2\nnext\n\nedit \\\"WAN_ID4_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.4.{{Spoke_number}} 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.4.250 255.255.255.0\nset interface wan1\nnext\n\nedit \\\"WAN_ID5_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.5.{{Spoke_number}} 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.5.250 255.255.255.0\nset interface wan2\nnext\n\nend\n\nconfig system interface\nedit \\\"Mgmt_H1N1_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan1\nnext\n\nedit \\\"Mgmt_H2N1_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan2\nnext\n\nedit \\\"Mgmt_H2N1_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan1\nnext\n\nedit \\\"Mgmt_H2N2_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan2\nnext\n\nend\n\n\n#Static Routes\n\nconfig router static\n    edit 300\n        set dst 10.20.100.0 255.255.255.0\n        set distance 30\n        set device \\\"Mgmt_H1N1_0\\\"\n    next\n    edit 400\n        set dst 10.20.100.0 255.255.255.0\n        set distance 40\n        set device \\\"Mgmt_H1N2_0\\\"\n    next\n    edit 500\n        set dst 10.20.100.0 255.255.255.0\n        set distance 50\n        set device \\\"Mgmt_H2N1_0\\\"\n    next\n    edit 600\n        set dst 10.20.100.0 255.255.255.0\n        set distance 60\n        set device \\\"Mgmt_H2N2_0\\\"\n    next\n    edit 301\n        set dst 10.20.200.0 255.255.255.0\n        set distance 30\n        set device \\\"Mgmt_H2N1_0\\\"\n    next\n    edit 401\n        set dst 10.20.200.0 255.255.255.0\n        set distance 40\n        set device \\\"Mgmt_H2N2_0\\\"\n    next\n    edit 501\n        set dst 10.20.200.0 255.255.255.0\n        set distance 50\n        set device \\\"Mgmt_H1N1_0\\\"\n    next\n    edit 601\n        set dst 10.20.200.0 255.255.255.0\n        set distance 60\n        set device \\\"Mgmt_H1N2_0\\\"\n    next\nend\n\n\",\n                    \"target\": \"device_database\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - Excute Script - Dual Braodband",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function waitOnTask(retries) {",
									"    if (!retries) {",
									"        pm.test(\"Task completed\", function() {",
									"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
									"        });",
									"        postman.setNextRequest(null);",
									"    }",
									"    else {",
									"        pm.sendRequest({",
									"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"            method: 'POST',",
									"            header: \"Content-Type:application/json\",",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
									"            }",
									"        }, function(err, response) {",
									"            var jsonData = response.json();",
									"            if (jsonData.result[0].data.percent == 100) {",
									"                // Task completed",
									"                if (jsonData.result[0].data.num_err) {",
									"                    postman.setNextRequest(null);",
									"                }",
									"                pm.test(\"Task completed\", function() {",
									"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
									"                });",
									"            }",
									"            else {",
									"                console.log(\"Task is still not complete\");",
									"                setTimeout(function() {",
									"                    waitOnTask(--retries);",
									"                }, 10000);",
									"            }",
									"        }); ",
									"    }",
									"}",
									"",
									"var jsonData = pm.response.json();",
									"var taskid = jsonData.result[0].data.task;",
									"",
									"waitOnTask(10);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"Dual_Broadband_Step_1_Host_Configurations\",\n                \"scope\": [\n                    {\n                        \"name\": \"{{Spoke_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.1 - Set Meta Fields for Spoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/device\",\n            \"data\": [\n                {\n                    \"name\": \"{{Spoke_FGT_Name}}\",\n                    \"meta fields\": {\n                        \"Address\": \"Sophia Antipolis, France\",\n                        \"branch-id \": \"{{Spoke_number}}\"\n                    }\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - Add Normalized Interfaces - WAN 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/wan1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"wan1\"\n                    ],\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - Add Normalized Interfaces - WAN 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/wan2/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"wan2\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - Add Normalized Interfaces - LAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/LAN/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"internal3\"\n                    ],\n                    \"intrazone-deny\": 0,\n                },\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9 - Add Normalized Interfaces - Mgmt_Loopback",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_Loopback/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"intrazone-deny\": 0,\n                },\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.5 - Add Normalized Interfaces - Mgmt_H1N1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_H1N1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_H1N1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.6 - Add Normalized Interfaces - Mgmt_H2N1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_H2N1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_H2N1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.5 - Add Normalized Interfaces - Mgmt_H1N2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_H1N2/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_H1N2_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.5 - Add Normalized Interfaces - Mgmt_H2N2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_H2N2/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_H2N2_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.7 - Add Normalized Interfaces - Overlay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Overlay/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Overlay\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.9 - Add Normalized Interfaces - Underlay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Underlay/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Underlay\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.10 - Add Normalized Interfaces - WAN_ID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.10 - Add Normalized Interfaces - WAN_ID2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID2/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID2_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.10 - Add Normalized Interfaces - WAN_ID4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID4/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID4_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.10 - Add Normalized Interfaces - WAN_ID5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID5/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID5_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "13 - Add Mgmt & Overlay VPN Tunnels for Dual Broadband Hosts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/vpnmgr/node\",\n            \"data\": [\n                {\n                    \"id\": 3,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"Mgmt_H1N1\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n                {\n                    \"id\": 4,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"Mgmt_H2N1\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n\n                {\n                    \"id\": 5,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"Mgmt_H1N2\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n                {\n                    \"id\": 6,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"Mgmt_H2N2\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n\n                {\n                    \"id\": 7,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"WAN_ID1\",\n                    \"role\": 1,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 8,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"WAN_ID2\",\n                    \"role\": 1,\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 9,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"WAN_ID4\",\n                    \"role\": 1,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 10,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"dual-broadband\"\n                    },\n                    \"vpntable\": \"WAN_ID5\",\n                    \"role\": 1,\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "10 - Install Dual Broadband Spoke Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function waitOnTask(retries) {",
									"    if (!retries) {",
									"        pm.test(\"Task completed\", function() {",
									"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
									"        });",
									"        postman.setNextRequest(null);",
									"    }",
									"    else {",
									"        pm.sendRequest({",
									"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"            method: 'POST',",
									"            header: \"Content-Type:application/json\",",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
									"            }",
									"        }, function(err, response) {",
									"            var jsonData = response.json();",
									"            if (jsonData.result[0].data.percent == 100) {",
									"                // Task completed",
									"                if (jsonData.result[0].data.num_err) {",
									"                    postman.setNextRequest(null);",
									"                }",
									"                pm.test(\"Task completed\", function() {",
									"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
									"                });",
									"            }",
									"            else {",
									"                console.log(\"Task is still not complete\");",
									"                setTimeout(function() {",
									"                    waitOnTask(--retries);",
									"                }, 50000);",
									"            }",
									"        }); ",
									"    }",
									"}",
									"",
									"var jsonData = pm.response.json();",
									"var taskid = jsonData.result[0].data.task;",
									"",
									"waitOnTask(10);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/package\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"pkg\": \"Dual_Broadband_Sites\",\n                    \"scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "11 - Add Script - Spoke - BGP Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"name\": \"Dual_Broadband_Spoke_BGP_Configs\",\n                    \"type\": \"cli\",\n                    \"desc\": \"BGP Configurations for Dual Broadband Spoke\",\n                    \"content\": \"# BGP Configurations\n\nconfig router community-list\n    edit \\\"Routes_from_Overlay\\\"\n        config rule\n            edit 10\n                set action permit\n                set match \\\"1331:0\\\"\n            next\n        end\n    next\nend\n#\n#\n#\n\nconfig router prefix-list\n    edit \\\"Routes_to_Hub\\\"\n        config rule\n            edit 1\n                set prefix {{Spoke_LAN}}\n            next\n        end\n    next\n    edit \\\"Routes_from_Hub\\\"\n        config rule\n            edit 1\n                set prefix 10.50.0.0 255.255.0.0\n                set ge 24\n                set le 24\n            next\n        end\n    next\nend\n\n#\n#\n#\n\nconfig router route-map\n    edit \\\"Routes_from_Hub\\\"\n        config rule\n            edit 1\n                set match-community ”Routes_from_Overlay”\n                set match-ip-address ”Routes_from_Hub”\n            next\n        end\n    next\n    edit Routes_to_Hub\n        config rule\n            edit 1\n                set match-ip-address Routes_to_Hub\n                set set-community 1331:0\n            next\n        end\n    next\nend\nconfig router bgp\n    set as 1331\n    set keepalive-timer 5\n    set holdtime-timer 15\n    set ibgp-multipath enable\n    set additional-path enable\n    set additional-path-select 4\n    config neighbor\n        edit 10.10.1.250\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in Routes_from_Hub\n            set route-map-out Routes_to_Hub\n            set update-source WAN_ID1_0\n            set additional-path receive\n        next\n        edit 10.10.2.250\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in Routes_from_Hub\n            set route-map-out Routes_to_Hub\n            set update-source WAN_ID2_0\n            set additional-path receive\n        next\n        edit 10.10.4.250\n            set advertisement-interval 1\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in Routes_from_Hub\n            set route-map-out Routes_to_Hub\n            set update-source WAN_ID4_0\n            set additional-path receive\n        next\n        edit 10.10.5.250\n            set advertisement-interval 1\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in Routes_from_Hub\n            set route-map-out Routes_to_Hub\n            set update-source WAN_ID5_0\n            set additional-path receive\n        next\n    end\n    config network\n        edit 1\n            set prefix {{Spoke_LAN}}\n        next\n    end\nend\n\n\nconfig vpn ipsec phase1-interface\n    edit \\\"WAN_ID1_0\\\"\n        set auto-discovery-receiver enable\n        set auto-discovery-shortcuts dependent\n        set idle-timeout enable\n        set idle-timeoutinterval 5\n    next\n    edit \\\"WAN_ID2_0\\\"\n        set auto-discovery-receiver enable\n        set auto-discovery-shortcuts dependent\n        set idle-timeout enable\n        set idle-timeoutinterval 5\n    next\n    edit \\\"WAN_ID4_0\\\"\n        set auto-discovery-receiver enable\n        set auto-discovery-shortcuts dependent\n        set idle-timeout enable\n        set idle-timeoutinterval 5\n    next\n    edit \\\"WAN_ID5_0\\\"\n        set auto-discovery-receiver enable\n        set auto-discovery-shortcuts dependent\n        set idle-timeout enable\n        set idle-timeoutinterval 5\n    next\nend\n\n\n\",\n                    \"target\": \"device_database\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "12 - Run Script - Spoke -  Apply BGP Configs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function waitOnTask(retries) {",
									"    if (!retries) {",
									"        pm.test(\"Task completed\", function() {",
									"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
									"        });",
									"        postman.setNextRequest(null);",
									"    }",
									"    else {",
									"        pm.sendRequest({",
									"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"            method: 'POST',",
									"            header: \"Content-Type:application/json\",",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
									"            }",
									"        }, function(err, response) {",
									"            var jsonData = response.json();",
									"            if (jsonData.result[0].data.percent == 100) {",
									"                // Task completed",
									"                if (jsonData.result[0].data.num_err) {",
									"                    postman.setNextRequest(null);",
									"                }",
									"                pm.test(\"Task completed\", function() {",
									"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
									"                });",
									"            }",
									"            else {",
									"                console.log(\"Task is still not complete\");",
									"                setTimeout(function() {",
									"                    waitOnTask(--retries);",
									"                }, 10000);",
									"            }",
									"        }); ",
									"    }",
									"}",
									"",
									"var jsonData = pm.response.json();",
									"var taskid = jsonData.result[0].data.task;",
									"",
									"waitOnTask(10);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"Dual_Broadband_Spoke_BGP_Configs\",\n                \"scope\": [\n                    {\n                        \"name\": \"{{Spoke_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "13 - Install Configuration - Hubs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function waitOnTask(retries) {",
									"    if (!retries) {",
									"        pm.test(\"Task completed\", function() {",
									"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
									"        });",
									"        postman.setNextRequest(null);",
									"    }",
									"    else {",
									"        pm.sendRequest({",
									"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"            method: 'POST',",
									"            header: \"Content-Type:application/json\",",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
									"            }",
									"        }, function(err, response) {",
									"            var jsonData = response.json();",
									"            if (jsonData.result[0].data.percent == 100) {",
									"                // Task completed",
									"                if (jsonData.result[0].data.num_err) {",
									"                    postman.setNextRequest(null);",
									"                }",
									"                pm.test(\"Task completed\", function() {",
									"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
									"                });",
									"            }",
									"            else {",
									"                console.log(\"Task is still not complete\");",
									"                setTimeout(function() {",
									"                    waitOnTask(--retries);",
									"                }, 50000);",
									"            }",
									"        }); ",
									"    }",
									"}",
									"",
									"var jsonData = pm.response.json();",
									"var taskid = jsonData.result[0].data.task;",
									"",
									"waitOnTask(10);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/device\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "11 - Add Script - Spoke - CSF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"name\": \"PIP_&_Broadband_Spoke_CSF\",\n                    \"type\": \"cli\",\n                    \"desc\": \"CSF Configurations for PIP + Broadband Spoke\",\n                    \"content\": \"# BGP Configurations\n\nconfig system csf\n    set status enable\n    set upstream-ip 10.10.1.250\n    set management-ip {{WAN_1_IP}}\nend\nconfig system saml\n    set default-profile \\\"super_admin\\\"\nend\n\n\",\n                    \"target\": \"remote_device\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "12 - Run Script - Spoke - Apply CSF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function waitOnTask(retries) {",
									"    if (!retries) {",
									"        pm.test(\"Task completed\", function() {",
									"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
									"        });",
									"        postman.setNextRequest(null);",
									"    }",
									"    else {",
									"        pm.sendRequest({",
									"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"            method: 'POST',",
									"            header: \"Content-Type:application/json\",",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
									"            }",
									"        }, function(err, response) {",
									"            var jsonData = response.json();",
									"            if (jsonData.result[0].data.percent == 100) {",
									"                // Task completed",
									"                if (jsonData.result[0].data.num_err) {",
									"                    postman.setNextRequest(null);",
									"                }",
									"                pm.test(\"Task completed\", function() {",
									"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
									"                });",
									"            }",
									"            else {",
									"                console.log(\"Task is still not complete\");",
									"                setTimeout(function() {",
									"                    waitOnTask(--retries);",
									"                }, 50000);",
									"            }",
									"        }); ",
									"    }",
									"}",
									"",
									"var jsonData = pm.response.json();",
									"var taskid = jsonData.result[0].data.task;",
									"",
									"waitOnTask(10);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"PIP_&_Broadband_Spoke_CSF\",\n                \"scope\": [\n                    {\n                        \"name\": \"{{Spoke_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PIP + Broadband Sites - Day 1 Configurations",
			"item": [
				{
					"name": "1 - Discover Spoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"sn = jsonData.result[0].data.device.sn;",
									"hostname = jsonData.result[0].data.device.name;",
									"",
									"pm.environment.set(\"Spoke_FGT_SN\", sn);",
									"pm.environment.set(\"Spoke_FGT_Name\", hostname);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvm/cmd/discover/device\",\n            \"data\": {\n                \"device\": {\n                    \"adm_pass\": \"{{password}}\",\n                    \"adm_usr\": \"{{username}}\",\n                    \"ip\": \"{{Spoke_MGMT_LB_IP}}\"\n                }\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - Add Spoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function waitOnTask(retries) {",
									"    if (!retries) {",
									"        pm.test(\"Task completed\", function() {",
									"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
									"        });",
									"        postman.setNextRequest(null);",
									"    }",
									"    else {",
									"        pm.sendRequest({",
									"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"            method: 'POST',",
									"            header: \"Content-Type:application/json\",",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
									"            }",
									"        }, function(err, response) {",
									"            var jsonData = response.json();",
									"            if (jsonData.result[0].data.percent == 100) {",
									"                // Task completed",
									"                if (jsonData.result[0].data.num_err) {",
									"                    postman.setNextRequest(null);",
									"                }",
									"                pm.test(\"Task completed\", function() {",
									"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
									"                });",
									"            }",
									"            else {",
									"                console.log(\"Task is still not complete\");",
									"                setTimeout(function() {",
									"                    waitOnTask(--retries);",
									"                }, 10000);",
									"            }",
									"        }); ",
									"    }",
									"}",
									"",
									"var jsonData = pm.response.json();",
									"var taskid = jsonData.result[0].data.taskid;",
									"",
									"waitOnTask(10);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvm/cmd/add/dev-list\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"flags\": [\"create_task\", \"nonblocking\"],\n                \"add-dev-list\": [\n                    {\n\t                    \"adm_pass\": \"{{password}}\",\n\t                    \"adm_usr\": \"{{username}}\",\n                        \"ip\": \"{{Spoke_MGMT_LB_IP}}\",\n                        \"name\": \"{{Spoke_FGT_Name}}\",\n                        \"sn\": \"{{Spoke_FGT_SN}}\",\n                        \"mgmt_mode\": \"fmgfaz\",\n                        \"flags\": 24\n                    },\n\n                ]\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 - Add Mgmt_Loopback Dynamic Address Objects for Hub 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/firewall/address/Mgmt_Loopback/dynamic_mapping\",\n            \"data\": \n                    {\n                    \"_scope\": [\n                        {\n                        \"name\": \"{{Spoke_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                        }\n                    ],\n                    \"associated-interface\": \"Mgmt_Loopback\",\n                    \"subnet\": \"{{Spoke_MGMT_LB_IP}} 255.255.255.255\"\n                    }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 - Add LAN Dynamic Address Objects for Spoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/firewall/address/LAN/dynamic_mapping\",\n            \"data\": \n                    {\n                    \"_scope\": [\n                        {\n                        \"name\": \"{{Spoke_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                        }\n                    ],\n                    \"subnet\": \"{{Spoke_LAN}}\"\n                    }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 -Assign Spoke to [pip-broadband] Device Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/group/pip-broadband/object member\",\n            \"data\": [\n                {\n                    \"name\": \"{{Spoke_FGT_Name}}\",\n                    \"vdom\": \"root\"\n                },\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 - Assign FGT to SD-WAN Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/3 - PIP & Broadband SDWAN Template/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"{{Spoke_FGT_Name}}\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "15 -  Create SD-WAN Interface Members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"update\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/virtual-wan-link/members/wan2\",\n            \"data\": [\n                {\n                    \"dynamic_mapping\": [\n                        {\n                            \"_scope\": [\n                                {\n                                    \"name\": \"Branch_1_60F\",\n                                    \"vdom\": \"root\"\n                                }\n                            ],\n                            \"gateway\": \"{{WAN_2_GW}}\"\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "7 - Add Script - PIP & Broadband - Device DB Configurations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"script_schedule\": null,\n                    \"name\": \"Step_1_PIP_&_Broadband_Host_Configurations\",\n                    \"type\": \"cli\",\n                    \"desc\": \"\",\n                    \"content\": \"# BGP and Health Check Looopback Hub_1_ADVPN_&_BGP_Configuration\n\n# Interfaces\n\nconfig system interface\nedit \\\"WAN_ID1_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.1.{{Spoke_number}} 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.1.250 255.255.255.0\nset interface wan1\nnext\n\nedit \\\"WAN_ID3_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.3.{{Spoke_number}} 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.3.250 255.255.255.0\nset interface wan2\nnext\n\nedit \\\"WAN_ID4_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.4.{{Spoke_number}} 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.4.250 255.255.255.0\nset interface wan1\nnext\n\nedit \\\"WAN_ID6_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.6.{{Spoke_number}} 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.6.250 255.255.255.0\nset interface wan2\nnext\n\nend\n\n\nconfig system interface\nedit \\\"Mgmt_H1N1_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan1\nnext\n\nedit \\\"Mgmt_H2N1_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan2\nnext\n\nedit \\\"Mgmt_H2N1_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan1\nnext\n\nedit \\\"Mgmt_H2N2_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan2\nnext\n\nend\n\n\n#Static Routes\n\nconfig router static\n\nedit 300\nset dst 10.20.100.0 255.255.255.0\nset distance 30\nset device \\\"Mgmt_H1N1_0\\\"\nnext\n\nedit 301\nset dst 10.20.200.0 255.255.255.0\nset distance 30\nset device \\\"Mgmt_H2N1_0\\\"\nnext\n\nedit 400\nset dst 10.20.100.0 255.255.255.0\nset distance 40\nset device \\\"Mgmt_H2N1_0\\\"\nnext\n\nedit 401\nset dst 10.20.200.0 255.255.255.0\nset distance 40\nset device \\\"Mgmt_H1N1_0\\\"\nnext\n\nend\n\n\",\n                    \"target\": \"device_database\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - Excute Script - PIP & Braodband",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function waitOnTask(retries) {",
									"    if (!retries) {",
									"        pm.test(\"Task completed\", function() {",
									"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
									"        });",
									"        postman.setNextRequest(null);",
									"    }",
									"    else {",
									"        pm.sendRequest({",
									"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"            method: 'POST',",
									"            header: \"Content-Type:application/json\",",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
									"            }",
									"        }, function(err, response) {",
									"            var jsonData = response.json();",
									"            if (jsonData.result[0].data.percent == 100) {",
									"                // Task completed",
									"                if (jsonData.result[0].data.num_err) {",
									"                    postman.setNextRequest(null);",
									"                }",
									"                pm.test(\"Task completed\", function() {",
									"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
									"                });",
									"            }",
									"            else {",
									"                console.log(\"Task is still not complete\");",
									"                setTimeout(function() {",
									"                    waitOnTask(--retries);",
									"                }, 10000);",
									"            }",
									"        }); ",
									"    }",
									"}",
									"",
									"var jsonData = pm.response.json();",
									"var taskid = jsonData.result[0].data.task;",
									"",
									"waitOnTask(10);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"Step_1_PIP_&_Broadband_Host_Configurations\",\n                \"scope\": [\n                    {\n                        \"name\": \"{{Spoke_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.1 - Set Meta Fields for Spoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/device\",\n            \"data\": [\n                {\n                    \"name\": \"{{Spoke_FGT_Name}}\",\n                    \"latitude\": \"44.7866\",\n                    \"longitude\": \"20.4489\",\n                    \"meta fields\": {\n                        \"Address\": \"Sophia Antipolis, France\",\n                        \"branch-id \": \"{{Spoke_number}}\"\n                    }\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - Add Normalized Interfaces - WAN 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/wan1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"wan1\"\n                    ],\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - Add Normalized Interfaces - WAN 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/wan2/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"wan2\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - Add Normalized Interfaces - LAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/LAN/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"internal3\"\n                    ],\n                    \"intrazone-deny\": 0,\n                },\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9 - Add Normalized Interfaces - Mgmt_Loopback",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_Loopback/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"intrazone-deny\": 0,\n                },\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.5 - Add Normalized Interfaces - Mgmt_H1N1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_H1N1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_H1N1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.6 - Add Normalized Interfaces - Mgmt_H2N1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_H2N1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_H2N1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.7 - Add Normalized Interfaces - Overlay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Overlay/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Overlay\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.8 - Add Normalized Interfaces - Underlay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Underlay/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Underlay\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.9 - Add Normalized Interfaces - Internet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Internet/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Internet\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.10 - Add Normalized Interfaces - WAN_ID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.11 - Add Normalized Interfaces - WAN_ID3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID3/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID3_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.12 - Add Normalized Interfaces - WAN_ID4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID4/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID4_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "9.13 - Add Normalized Interfaces - WAN_ID6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID6/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID6_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "14 - Add Mgmt VPN Tunnels for Broadband + LTE Hosts Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/vpnmgr/node\",\n            \"data\": [\n                {\n                    \"id\": 16,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"Mgmt_H1N1\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n                {\n                    \"id\": 17,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"Mgmt_H2N1\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n\n                {\n                    \"id\": 18,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"Mgmt_H1N2\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n                {\n                    \"id\": 19,\n                    \"protected_subnet\": {\n                        \"addr\": \"Mgmt_Loopback\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"Mgmt_H2N2\",\n                    \"role\": 1,\n                    \"usrgrp\": [],\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"extgwip\": [],\n                    \"extgw_hubip\": [],\n                    \"extgw_p2_per_net\": 0,\n                    \"route-overlap\": 0,\n                    \"vpn-zone\": [],\n                    \"spoke-zone\": [],\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 1,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                },\n\n                {\n                    \"id\": 20,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"WAN_ID1\",\n                    \"role\": 1,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 21,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"WAN_ID2\",\n                    \"role\": 1,\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 22,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"WAN_ID4\",\n                    \"role\": 1,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n                {\n                    \"id\": 23,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"broadband-lte\"\n                    },\n                    \"vpntable\": \"WAN_ID5\",\n                    \"role\": 1,\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"auto-configuration\": 0,\n                    \"add-route\": 0,\n                    \"tunnel-search\": 0,\n                    \"net-device\": 1,\n                },\n\n\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "10 - Install PIP + Broadband Spoke Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function waitOnTask(retries) {",
									"    if (!retries) {",
									"        pm.test(\"Task completed\", function() {",
									"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
									"        });",
									"        postman.setNextRequest(null);",
									"    }",
									"    else {",
									"        pm.sendRequest({",
									"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"            method: 'POST',",
									"            header: \"Content-Type:application/json\",",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
									"            }",
									"        }, function(err, response) {",
									"            var jsonData = response.json();",
									"            if (jsonData.result[0].data.percent == 100) {",
									"                // Task completed",
									"                if (jsonData.result[0].data.num_err) {",
									"                    postman.setNextRequest(null);",
									"                }",
									"                pm.test(\"Task completed\", function() {",
									"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
									"                });",
									"            }",
									"            else {",
									"                console.log(\"Task is still not complete\");",
									"                setTimeout(function() {",
									"                    waitOnTask(--retries);",
									"                }, 50000);",
									"            }",
									"        }); ",
									"    }",
									"}",
									"",
									"var jsonData = pm.response.json();",
									"var taskid = jsonData.result[0].data.task;",
									"",
									"waitOnTask(10);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/package\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"pkg\": \"PIP_and_Broadband_sites\",\n                    \"scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "11 - Add Script - Spoke - BGP Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"name\": \"PIP_&_Broadband_Spoke_BGP_Configs\",\n                    \"type\": \"cli\",\n                    \"desc\": \"BGP Configurations for PIP + Broadband Spoke\",\n                    \"content\": \"# BGP Configurations\n\nconfig router community-list\n    edit \\\"Routes_from_Overlay\\\"\n        config rule\n            edit 10\n                set action permit\n                set match \\\"1331:0\\\"\n            next\n        end\n    next\n    edit \\\"Routes_from_Overlay\\\"\n        config rule\n            edit 10\n                set action permit\n                set match \\\"1331:0\\\"\n            next\n        end\n    next\nend\n#\n#\n#\n\nconfig router prefix-list\n    edit \\\"BGP_with_PE\\\"\n        config rule\n            edit 1\n                set prefix \\\"{{Spoke_MGMT_LB_IP}} 255.255.255.255\\\"\n            next\n        end\n    next\n    edit \\\"Routes_from_PE\\\"\n        config rule\n            edit 1\n                set prefix 10.50.0.0 255.255.0.0\n            next\n            edit 2\n                set prefix 10.20.100.0 255.255.255.0\n            next\n            edit 3\n                set prefix 10.20.200.0 255.255.255.0\n            next\n            edit 4\n                set prefix 159.24.76.144 255.255.255.240\n            next\n            edit 5\n                set prefix 205.223.104.0 255.255.255.0\n            next\n            edit 6\n                set prefix 205.223.105.0 255.255.255.0\n            next\n            edit 7\n                set prefix 159.24.76.176 255.255.255.240\n            next\n            edit 8\n                set prefix 153.39.115.20 255.255.255.255\n            next\n            edit 9\n                set prefix 206.64.200.122 255.255.255.255\n            next\n            edit 10\n                set prefix 192.168.209.24 255.255.255.252\n            next\n            edit 11\n                set prefix 192.168.209.28 255.255.255.252\n            next\n            edit 12\n                set prefix 192.168.216.0 255.255.255.240\n            next\n            edit 13\n                set prefix 192.168.216.216 255.255.255.248\n            next\n            edit 14\n                set prefix 192.168.254.128 255.255.255.252\n            next\n            edit 15\n                set prefix 192.168.254.132 255.255.255.252\n            next\n            edit 16\n                set prefix 192.168.254.140 255.255.255.252\n            next\n            edit 17\n                set prefix 192.168.254.136 255.255.255.252\n            next\n        end\n    next\n    edit \\\"Routes_to_Hub\\\"\n        config rule\n            edit 1\n                set prefix 10.50.20.0 255.255.255.0\n            next\n        end\n    next\n    edit \\\"Routes_from_Hub\\\"\n        config rule\n            edit 1\n                set prefix 10.50.0.0 255.255.0.0\n                set ge 24\n                set le 24\n            next\n        end\n    next\nend\n\n#\n#\n#\n\nconfig router route-map\n    edit \\\"BGP_with_PE\\\"\n        config rule\n            edit 1\n                set action deny\n                set match-community \\\"Routes_from_Overlay\\\"\n                set match-ip-address \\\"Routes_from_Hub\\\"\n            next\n            edit 2\n                set match-ip-address \\\"BGP_with_PE\\\"\n            next\n        end\n    next\n    edit \\\"Routes_From_PE\\\"\n        config rule\n            edit 1\n                set match-ip-address \\\"Routes_from_PE\\\"\n                set set-community \\\"701:0\\\"\n                set set-local-preference 50\n            next\n        end\n    next\n    edit \\\"Routes_from_Hub\\\"\n        config rule\n            edit 1\n                set match-community \\\"Routes_from_Overlay\\\"\n                set match-ip-address \\\"Routes_from_Hub\\\"\n            next\n        end\n    next\n    edit Routes_to_Hub\n        config rule\n            edit 1\n                set match-ip-address Routes_to_Hub\n                set set-community 1331:0\n            next\n        end\n    next\nend\nconfig router bgp\n    set as 1331\n    set keepalive-timer 5\n    set holdtime-timer 15\n    set ibgp-multipath enable\n    set additional-path enable\n    set additional-path-select 4\n    config neighbor\n        edit \\\"{{WAN_2_GW}}\\\"\n            set soft-reconfiguration enable\n            set remote-as 701\n            set local-as 7046\n            set local-as-replace-as enable\n            set route-map-in \\\"Routes_From_PE\\\"\n            set route-map-out \\\"BGP_with_PE\\\"\n        next\n        edit 10.10.1.250\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in Routes_from_Hub\n            set route-map-out Routes_to_Hub\n            set update-source WAN_ID1_0\n            set additional-path receive\n        next\n        edit 10.10.3.250\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in Routes_from_Hub\n            set route-map-out Routes_to_Hub\n            set update-source WAN_ID3_0\n            set additional-path receive\n        next\n        edit 10.10.4.250\n            set advertisement-interval 1\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in Routes_from_Hub\n            set route-map-out Routes_to_Hub\n            set update-source WAN_ID4_0\n            set additional-path receive\n        next\n        edit 10.10.6.250\n            set advertisement-interval 1\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in Routes_from_Hub\n            set route-map-out Routes_to_Hub\n            set update-source WAN_ID6_0\n            set additional-path receive\n        next\n    end\n    config network\n        edit 1\n            set prefix {{Spoke_LAN}}\n        next\n        edit 2\n            set prefix {{Spoke_MGMT_LB_IP}} 255.255.255.255\n        next\n    end\nend\n\nconfig vpn ipsec phase1-interface\n    edit \\\"WAN_ID1_0\\\"\n        set auto-discovery-receiver enable\n        set auto-discovery-shortcuts dependent\n        set idle-timeout enable\n        set idle-timeoutinterval 5\n    next\n    edit \\\"WAN_ID3_0\\\"\n        set auto-discovery-receiver enable\n        set auto-discovery-shortcuts dependent\n        set idle-timeout enable\n        set idle-timeoutinterval 5\n    next\n    edit \\\"WAN_ID4_0\\\"\n        set auto-discovery-receiver enable\n        set auto-discovery-shortcuts dependent\n        set idle-timeout enable\n        set idle-timeoutinterval 5\n    next\n    edit \\\"WAN_ID6_0\\\"\n        set auto-discovery-receiver enable\n        set auto-discovery-shortcuts dependent\n        set idle-timeout enable\n        set idle-timeoutinterval 5\n    next\nend\n\n\",\n                    \"target\": \"device_database\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "12 - Run Script - Spoke -  Apply BGP Configs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function waitOnTask(retries) {",
									"    if (!retries) {",
									"        pm.test(\"Task completed\", function() {",
									"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
									"        });",
									"        postman.setNextRequest(null);",
									"    }",
									"    else {",
									"        pm.sendRequest({",
									"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"            method: 'POST',",
									"            header: \"Content-Type:application/json\",",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
									"            }",
									"        }, function(err, response) {",
									"            var jsonData = response.json();",
									"            if (jsonData.result[0].data.percent == 100) {",
									"                // Task completed",
									"                if (jsonData.result[0].data.num_err) {",
									"                    postman.setNextRequest(null);",
									"                }",
									"                pm.test(\"Task completed\", function() {",
									"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
									"                });",
									"            }",
									"            else {",
									"                console.log(\"Task is still not complete\");",
									"                setTimeout(function() {",
									"                    waitOnTask(--retries);",
									"                }, 10000);",
									"            }",
									"        }); ",
									"    }",
									"}",
									"",
									"var jsonData = pm.response.json();",
									"var taskid = jsonData.result[0].data.task;",
									"",
									"waitOnTask(10);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"PIP_&_Broadband_Spoke_BGP_Configs\",\n                \"scope\": [\n                    {\n                        \"name\": \"{{Spoke_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "13 - Install Configuration - PIP + Broadband Spoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function waitOnTask(retries) {",
									"    if (!retries) {",
									"        pm.test(\"Task completed\", function() {",
									"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
									"        });",
									"        postman.setNextRequest(null);",
									"    }",
									"    else {",
									"        pm.sendRequest({",
									"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"            method: 'POST',",
									"            header: \"Content-Type:application/json\",",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
									"            }",
									"        }, function(err, response) {",
									"            var jsonData = response.json();",
									"            if (jsonData.result[0].data.percent == 100) {",
									"                // Task completed",
									"                if (jsonData.result[0].data.num_err) {",
									"                    postman.setNextRequest(null);",
									"                }",
									"                pm.test(\"Task completed\", function() {",
									"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
									"                });",
									"            }",
									"            else {",
									"                console.log(\"Task is still not complete\");",
									"                setTimeout(function() {",
									"                    waitOnTask(--retries);",
									"                }, 50000);",
									"            }",
									"        }); ",
									"    }",
									"}",
									"",
									"var jsonData = pm.response.json();",
									"var taskid = jsonData.result[0].data.task;",
									"",
									"waitOnTask(10);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/device\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"scope\": [\n                        {\n                            \"name\": \"{{Spoke_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "11 - Add Script - Spoke - CSF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"name\": \"PIP_&_Broadband_Spoke_CSF\",\n                    \"type\": \"cli\",\n                    \"desc\": \"CSF Configurations for PIP + Broadband Spoke\",\n                    \"content\": \"# BGP Configurations\n\nconfig system csf\n    set status enable\n    set upstream-ip 10.10.1.250\n    set management-ip {{WAN_1_IP}}\nend\nconfig system saml\n    set default-profile \\\"super_admin\\\"\nend\n\n\",\n                    \"target\": \"remote_device\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "12 - Run Script - Spoke - Apply CSF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function waitOnTask(retries) {",
									"    if (!retries) {",
									"        pm.test(\"Task completed\", function() {",
									"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
									"        });",
									"        postman.setNextRequest(null);",
									"    }",
									"    else {",
									"        pm.sendRequest({",
									"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"            method: 'POST',",
									"            header: \"Content-Type:application/json\",",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
									"            }",
									"        }, function(err, response) {",
									"            var jsonData = response.json();",
									"            if (jsonData.result[0].data.percent == 100) {",
									"                // Task completed",
									"                if (jsonData.result[0].data.num_err) {",
									"                    postman.setNextRequest(null);",
									"                }",
									"                pm.test(\"Task completed\", function() {",
									"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
									"                });",
									"            }",
									"            else {",
									"                console.log(\"Task is still not complete\");",
									"                setTimeout(function() {",
									"                    waitOnTask(--retries);",
									"                }, 10000);",
									"            }",
									"        }); ",
									"    }",
									"}",
									"",
									"var jsonData = pm.response.json();",
									"var taskid = jsonData.result[0].data.task;",
									"",
									"waitOnTask(10);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"PIP_&_Broadband_Spoke_CSF\",\n                \"scope\": [\n                    {\n                        \"name\": \"{{Spoke_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Hub 1 - Complete Configurations",
			"item": [
				{
					"name": "1 - Onboarding",
					"item": [
						{
							"name": "1 - Discover Hub 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"sn = jsonData.result[0].data.device.sn;",
											"hostname = jsonData.result[0].data.device.name;",
											"",
											"pm.environment.set(\"Hub1_FGT_SN\", sn);",
											"pm.environment.set(\"Hub1_FGT_Name\", hostname);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvm/cmd/discover/device\",\n            \"data\": {\n                \"device\": {\n                    \"adm_pass\": \"{{password}}\",\n                    \"adm_usr\": \"{{username}}\",\n                    \"ip\": \"{{Hub1_FGT_IP}}\"\n                }\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 - Add Hub 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.taskid;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvm/cmd/add/dev-list\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"flags\": [\"create_task\", \"nonblocking\"],\n                \"add-dev-list\": [\n                    {\n\t                    \"adm_pass\": \"{{password}}\",\n\t                    \"adm_usr\": \"{{username}}\",\n                        \"ip\": \"{{Hub1_FGT_IP}}\",\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"sn\": \"{{Hub1_FGT_SN}}\",\n                        \"mgmt_mode\": \"fmgfaz\",\n                        \"flags\": 24\n                    },\n\n                ]\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2 - Hub 1 Dynamic Addresses",
					"item": [
						{
							"name": "3 - Add Mgmt_Loopback Address Objects for Hub 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/firewall/address/Mgmt_Loopback/dynamic_mapping\",\n            \"data\": \n                    {\n                    \"_scope\": [\n                        {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                        }\n                    ],\n                    \"associated-interface\": \"Mgmt_Loopback\",\n                    \"subnet\": \"{{Hub1_FGT_IP}} 255.255.255.255\"\n                    }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4 - Add LAN Address Objects for Hub 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/firewall/address/LAN/dynamic_mapping\",\n            \"data\": \n                    {\n                    \"_scope\": [\n                        {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                        }\n                    ],\n                    \"subnet\": \"{{Hub1_FGT_LAN}}\"\n                    }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "3 - Overlay Tunnels and SD-WAN Configurations",
					"item": [
						{
							"name": "5 - Add Overlay Tunnels for Hubs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/vpnmgr/node\",\n            \"data\": [\n                {\n                \t\"id\": 100,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    },\n                    \"vpntable\": \"WAN_ID1\",\n                    \"role\": 0,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"net-device\": 0,\n                    \"tunnel-search\": 1,\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 0,\n                    \"dns-service\": \"default\",\n                    \"dhcp-server\": 0,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"assign-ip\": 1,\n                    \"assign-ip-from\": 0,\n                    \"dns-mode\": 1,\n                    \"peertype\": 1,\n                    \"unity-support\": 1,\n                    \"xauthtype\": 1\n                },\n\n                {\n                \t\"id\": 101,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    },\n                    \"vpntable\": \"WAN_ID2\",\n                    \"role\": 0,\n                    \"iface\": \"wan1\",\n                    \"automatic_routing\": 0,\n                    \"net-device\": 0,\n                    \"tunnel-search\": 1,\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 0,\n                    \"dns-service\": \"default\",\n                    \"dhcp-server\": 0,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"assign-ip\": 1,\n                    \"assign-ip-from\": 0,\n                    \"dns-mode\": 1,\n                    \"peertype\": 1,\n                    \"unity-support\": 1,\n                    \"xauthtype\": 1\n                },\n\n                {\n                \t\"id\": 102,\n                    \"protected_subnet\": {\n                        \"addr\": \"all\",\n                        \"seq\": 1\n                    },\n                    \"scope member\": {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    },\n                    \"vpntable\": \"WAN_ID3\",\n                    \"role\": 0,\n                    \"iface\": \"wan2\",\n                    \"automatic_routing\": 0,\n                    \"net-device\": 0,\n                    \"tunnel-search\": 1,\n                    \"vpn-interface-priority\": 0,\n                    \"auto-configuration\": 0,\n                    \"dns-service\": \"default\",\n                    \"dhcp-server\": 0,\n                    \"ipsec-lease-hold\": 60,\n                    \"add-route\": 0,\n                    \"assign-ip\": 1,\n                    \"assign-ip-from\": 0,\n                    \"dns-mode\": 1,\n                    \"peertype\": 1,\n                    \"unity-support\": 1,\n                    \"xauthtype\": 1\n                }\n\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "6 - Assign to Hub 1 SD-WAN Template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/1 - Hub 1 - Primary - SDWAN Template/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"{{Hub1_FGT_Name}}\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4 - CLI Templates and metafields",
					"item": [
						{
							"name": "7 - Add Script - Hub 1 - Device DB Configurations",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"script_schedule\": null,\n                    \"name\": \"Hub_1_Host_Configurations\",\n                    \"type\": \"cli\",\n                    \"desc\": \"\",\n                    \"content\": \"# BGP and Health Check Looopback Hub_1_ADVPN_&_BGP_Configuration\n\n# Interfaces\n\nconfig system interface\nedit \\\"WAN_ID1_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.1.250 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.1.254 255.255.255.0\nset interface wan1\nnext\nend\n\nconfig system interface\nedit \\\"WAN_ID2_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.2.250 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.2.254 255.255.255.0\nset interface wan1\nnext\nend\n\nconfig system interface\nedit \\\"WAN_ID3_0\\\"\nset vdom \\\"root\\\"\nset ip 10.10.3.250 255.255.255.255\nset allowaccess ping\nset type tunnel\nset remote-ip 10.10.3.254 255.255.255.0\nset interface wan2\nnext\nend\n\nconfig system interface\nedit \\\"Mgmt_H1N1_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan1\nnext\n\nedit \\\"Mgmt_H2N1_0\\\"\nset vdom \\\"root\\\"\nset type tunnel\nset interface wan1\nnext\nend\n\n#Static Routes\n\nconfig router static\n\nedit 300\nset dst 10.20.100.0 255.255.255.0\nset distance 30\nset device \\\"Mgmt_H1N1_0\\\"\nnext\n\nedit 301\nset dst 10.20.200.0 255.255.255.0\nset distance 30\nset device \\\"Mgmt_H2N1_0\\\"\nnext\n\nedit 400\nset dst 10.20.100.0 255.255.255.0\nset distance 35\nset device \\\"Mgmt_H2N1_0\\\"\nnext\n\nedit 401\nset dst 10.20.200.0 255.255.255.0\nset distance 35\nset device \\\"Mgmt_H1N1_0\\\"\nnext\n\nend\n\n\",\n                    \"target\": \"device_database\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "8 - Excute Script - Hub 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"Hub_1_Host_Configurations\",\n                \"scope\": [\n                    {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "5 - Metafields & Normalized Interfaces",
					"item": [
						{
							"name": "9 - Set Meta Fields for Hubs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/device\",\n            \"data\": [\n                {\n                    \"name\": \"{{Hub1_FGT_Name}}\",\n                    \"meta fields\": {\n                        \"latitude\": \"0x4229A0FC\",\n                        \"longitude\": \"0xC28EC3CF\",\n                        \"hub-id\": \"1\",\n                        \"peer-dc-id\": \"2\"\n                    }\n                },\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.1 - Add Normalized Interfaces - WAN 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/wan1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"wan1\"\n                    ],\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.2 - Add Normalized Interfaces - WAN 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/wan2/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"wan2\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.3 - Add Normalized Interfaces - LAN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/LAN/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"port3\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.4 - Add Normalized Interfaces - Mgmt_Loopback",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_Loopback/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_Loopback\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.5 - Add Normalized Interfaces - Mgmt_H1N1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_H1N1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_H1N1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.6 - Add Normalized Interfaces - Mgmt_H2N1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Mgmt_H2N1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Mgmt_H2N1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.7 - Add Normalized Interfaces - Overlay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Overlay/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Overlay\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.8 - Add Normalized Interfaces - Underlay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Underlay/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Underlay\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.9 - Add Normalized Interfaces - Internet",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/Internet/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"Internet\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.10 - Add Normalized Interfaces - WAN_ID1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID1/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID1_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.10 - Add Normalized Interfaces - WAN_ID2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID2/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID2_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.10 - Add Normalized Interfaces - WAN_ID3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/WAN_ID3/dynamic_mapping\",\n            \"data\": [\n                {\n                    \"_scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"local-intf\": [\n                        \"WAN_ID3_0\"\n                    ],\n                    \"intrazone-deny\": 0,\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "6 - Assign Hub 1 to [hubs] Device Group",
					"item": [
						{
							"name": "7 -Assign Hub 1 to [hubs] Device Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/group/hubs/object member\",\n            \"data\": [\n                {\n                    \"name\": \"{{Hub1_FGT_Name}}\",\n                    \"vdom\": \"root\"\n                },\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.5 - Add Hub 1 to it's Policy Packages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"update\",\n    \"params\": [\n        {\n            \"url\": \"/pm/pkg/adom/{{adom}}\",\n            \"data\": [\n                {\n                    \"name\": \"Hub1_Policy_Pkg\",\n                    \"scope member\": {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    },\n                    \"type\": \"pkg\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "7 - Initial Deployment - Policies, VPN tunnels, VPN ifaces",
					"item": [
						{
							"name": "7 - Install Policy - Hub 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 50000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/package\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"pkg\": \"Hub1_Policy_Pkg\",\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "8 - 2nd Push - BGP configurations / Final",
					"item": [
						{
							"name": "8 - Add Script - Hub 1 - BGP & Loopback",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"script_schedule\": null,\n                    \"name\": \"Hub_1_ADVPN_&_BGP_Configuration\",\n                    \"type\": \"cli\",\n                    \"desc\": \"\",\n                    \"content\": \"# BGP and Health Check Looopback Hub_1_ADVPN_&_BGP_Configuration\n\n#Static Routes\n\nconfig vpn ipsec phase1-interface\n    edit \\\"WAN_ID1_0\\\"\n        set auto-discovery-sender enable\n    next\n    edit \\\"WAN_ID2_0\\\"\n        set auto-discovery-sender enable\n    next\n    edit \\\"WAN_ID3_0\\\"\n        set auto-discovery-sender enable\n    next\nend\n\n\n\nconfig router community-list\n    edit \\\"Routes_from_PIP\\\"\n        config rule\n            edit 10\n                set action permit\n                set match \\\"7604:0\\\"\n            next\n        end\n    next\n    edit \\\"Routes_from_Overlay\\\"\n        config rule\n            edit 10\n                set action permit\n                set match \\\"1331:0\\\"\n            next\n        end\n    next\nend\n\n#\n#\n#\n\nconfig router prefix-list\n    edit \\\"BGP_with_PE\\\"\n        config rule\n            edit 1\n                set prefix {{Hub1_FGT_IP}} 255.255.255.255\n            next\n        end\n    next\n    edit \\\"Routes_from_PE\\\"\n        config rule\n            edit 1\n                set prefix 10.50.0.0 255.255.0.0\n            next\n            edit 2\n                set prefix 10.20.100.0 255.255.255.0\n            next\n            edit 3\n                set prefix 10.20.200.0 255.255.255.0\n            next\n            edit 4\n                set prefix 159.24.76.144 255.255.255.240\n            next\n            edit 5\n                set prefix 205.223.104.0 255.255.255.0\n            next\n            edit 6\n                set prefix 205.223.105.0 255.255.255.0\n            next\n            edit 7\n                set prefix 159.24.76.176 255.255.255.240\n            next\n            edit 8\n                set prefix 153.39.115.20 255.255.255.255\n            next\n            edit 9\n                set prefix 206.64.200.122 255.255.255.255\n            next\n            edit 10\n                set prefix 192.168.209.24 255.255.255.252\n            next\n            edit 11\n                set prefix 192.168.209.28 255.255.255.252\n            next\n            edit 12\n                set prefix 192.168.216.0 255.255.255.240\n            next\n            edit 13\n                set prefix 192.168.216.216 255.255.255.248\n            next\n            edit 14\n                set prefix 192.168.254.128 255.255.255.252\n            next\n            edit 15\n                set prefix 192.168.254.132 255.255.255.252\n            next\n            edit 16\n                set prefix 192.168.254.140 255.255.255.252\n            next\n            edit 17\n                set prefix 192.168.254.136 255.255.255.252\n            next\n        end\n    next\n    edit \\\"Routes_to_Spokes\\\"\n        config rule\n            edit 1\n                set prefix 10.50.0.0 255.255.0.0\n                set ge 24\n                set le 24\n            next\n        end\n    next\n    edit \\\"Routes_from_Spokes\\\"\n        config rule\n            edit 1\n                set prefix 10.50.0.0 255.255.0.0\n                set ge 24\n                set le 24\n            next\n        end\n    next\nend\n\n#\n#\n#\n\nconfig router route-map\n    edit \\\"BGP_with_PE\\\"\n        config rule\n            edit 1\n                set match-community \\\"Routes_from_Overlay\\\"\n            next\n            edit 2\n                set match-ip-address \\\"BGP_with_PE\\\"\n            next\n        end\n    next\n    edit \\\"Routes_From_PE\\\"\n        config rule\n            edit 1\n                set match-ip-address \\\"Routes_from_PE\\\"\n                set set-community \\\"701:0\\\"\n                set set-local-preference 50\n            next\n        end\n    next\n    edit \\\"Routes_from_Spokes\\\"\n        config rule\n            edit 1\n                set match-community \\\"Routes_from_Overlay\\\"\n                set match-ip-address \\\"Routes_from_Spokes\\\"\n            next\n        end\n    next\n    edit \\\"Routes_to_Spokes\\\"\n        config rule\n            edit 1\n                set action deny\n                set match-community \\\"Routes_from_PIP\\\"\n            next\n            edit 2\n                set set-community \\\"1331:0\\\"\n                set match-ip-address \\\"Routes_to_Spokes\\\"\n            next\n        end\n    next\nend\n\n#\n#\n#\n\nconfig router bgp\n    set as 1331\n    set keepalive-timer 5\n    set holdtime-timer 15\n    set ibgp-multipath enable\n    config neighbor\n        edit \\\"{{Hub1_BGP_Neighbor_IP}}\\\"\n            set soft-reconfiguration enable\n            set remote-as 701\n            set local-as 7046\n            set local-as-replace-as enable\n            set route-map-in \\\"Routes_From_PE\\\"\n            set route-map-out \\\"BGP_with_PE\\\"\n        next\n    end\n    config neighbor-group\n        edit \\\"WAN_Spokes_ID1\\\"\n            set advertisement-interval 1\n            set link-down-failover enable\n            set next-hop-self enable\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in \\\"Routes_from_Spokes\\\"\n            set route-map-out \\\"Routes_to_Spokes\\\"\n            set update-source \\\"WAN_ID1_0\\\"\n            set route-reflector-client enable\n        next\n        edit \\\"WAN_Spokes_ID2\\\"\n            set advertisement-interval 1\n            set link-down-failover enable\n            set next-hop-self enable\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in \\\"Routes_from_Spokes\\\"\n            set route-map-out \\\"Routes_to_Spokes\\\"\n            set update-source \\\"WAN_ID2_0\\\"\n            set route-reflector-client enable\n        next\n        edit \\\"WAN_Spokes_ID3\\\"\n            set advertisement-interval 1\n            set link-down-failover enable\n            set next-hop-self enable\n            set soft-reconfiguration enable\n            set remote-as 1331\n            set route-map-in \\\"Routes_from_Spokes\\\"\n            set route-map-out \\\"Routes_to_Spokes\\\"\n            set update-source \\\"WAN_ID3_0\\\"\n            set route-reflector-client enable\n        next\n    end\n    config neighbor-range\n        edit 1\n            set prefix 10.10.1.0 255.255.255.0\n            set neighbor-group \\\"WAN_Spokes_ID1\\\"\n        next\n        edit 2\n            set prefix 10.10.2.0 255.255.255.0\n            set neighbor-group \\\"WAN_Spokes_ID2\\\"\n        next\n        edit 3\n            set prefix 10.10.3.0 255.255.255.0\n            set neighbor-group \\\"WAN_Spokes_ID3\\\"\n        next\n    end\n    config network\n        edit 1\n            set prefix {{Hub1_FGT_LAN}}\n        next\n        edit 2\n            set prefix {{Hub1_FGT_IP}} 255.255.255.255\n        next\n    end\nend\n\n\nconfig router policy\n    edit 1\n        set input-device \\\"WAN_ID1_0\\\" \\\"WAN_ID2_0\\\"\n        set srcaddr \\\"all\\\"\n        set srcaddr \\\"all\\\"\n        set output-device \\\"WAN_ID1_0\\\"\n    next\n    edit 2\n        set input-device \\\"WAN_ID1_0\\\" \\\"WAN_ID2_0\\\"\n        set srcaddr \\\"all\\\"\n        set srcaddr \\\"all\\\"\n        set output-device \\\"WAN_ID2_0\\\"\n    next\n    edit 3\n        set input-device \\\"WAN_ID3_0\\\"\n        set srcaddr \\\"all\\\"\n        set srcaddr \\\"all\\\"\n        set output-device \\\"WAN_ID3_0\\\"\n    next\nend\n\",\n                    \"target\": \"device_database\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9 - Run Script - Hub 1 - BGP & Loopback",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"Hub_1_ADVPN_&_BGP_Configuration\",\n                \"scope\": [\n                    {\n                        \"name\": \"{{Hub1_FGT_Name}}\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "12 - Install Configuration - Hub 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/device\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"scope\": [\n                        {\n                            \"name\": \"{{Hub1_FGT_Name}}\",\n                            \"vdom\": \"root\"\n                        },\n                    ],\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable('session',data['session']);",
							"postman.setEnvironmentVariable('status_code',data['result'][0]['status']['code']);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"session\" : 1,\r\n\t\"id\" : 1,\r\n\t\"method\" : \"exec\",\r\n\t\"params\" : [\r\n\t\t{\r\n\t\t\t\"url\" : \"sys/login/user\",\r\n\t\t\t\"data\" : [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"user\" : \"{{username}}\",\r\n\t\t\t\t\t\"passwd\" : \"{{password}}\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
				},
				"url": {
					"raw": "https://{{ip}}/jsonrpc",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"path": [
						"jsonrpc"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable('session',data['session']);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"session\" : \"{{session}}\",\r\n  \"id\" : 1,\r\n  \"method\" : \"exec\",\r\n  \"params\" : [\r\n    {\r\n      \"url\" : \"/sys/logout\"\r\n    }\r\n  ]\r\n}"
				},
				"url": {
					"raw": "https://{{ip}}/jsonrpc",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"path": [
						"jsonrpc"
					]
				},
				"description": "Log out a session."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"HTTP Status code is 200 OK\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"",
					"pm.test(\"JSON Status code is 0\", function () {",
					"    var jsonData = pm.response.json();",
					"    if (jsonData.result[0].status.code) {",
					"        postman.setNextRequest(null);",
					"    }    ",
					"    pm.expect(jsonData.result[0].status.code).to.equal(0);",
					"});"
				]
			}
		}
	]
}